[
    {
        "op": "core/column-removal",
        "description": "Remove column ``Temp``",
        "columnName": "Temp"
    }
    {
        "op": "core/text-transform",
        "description": "Null values in column ``URL Domain`` in rows where ``URL ID`` value is `[None]`",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "URL ID",
                    "expression": "grel:toString(value==\"[None]\")",
                    "columnName": "URL ID",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": "true",
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "columnName": "URL Domain",
        "expression": "null",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    },
    {
        "op": "core/text-transform",
        "description": "Null values in column ``URL ID`` where value is `[None]`",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "URL ID",
                    "expression": "grel:toString(value==\"[None]\")",
                    "columnName": "URL ID",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": "true",
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "columnName": "URL ID",
        "expression": "null",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/text-transform",
        "description": "Append `]|[` and value of ``URL ID`` to ``URL Domain``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "URL Domain",
        "expression": "grel:value+\"]|[\"+cells[\"URL ID\"].value",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    },
    {
        "op": "core/column-removal",
        "description": "Remove column ``URL ID``",
        "columnName": "URL ID"
    },
    {
        "op": "core/text-transform",
        "description": "Append `]|[` and value of ``001 ID`` to ``001 ID Source``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "001 ID Source",
        "expression": "grel:value+\"]|[\"+cells[\"001 ID\"].value",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    },
    {
        "op": "core/column-removal",
        "description": "Remove column ``001 ID``",
        "columnName": "001 ID"
    }
    {
        "op": "core/multivalued-cell-join",
        "description": "Combine all values in column ``URL Domain`` for a record in the first row seperated by `}|{`",
        "columnName": "URL Domain",
        "keyColumnName": "BIB Number",
        "separator": "}|{"
    },
    {
        "op": "core/multivalued-cell-join",
        "description": "Combine all values in column ``001 ID Source`` for a record in the first row seperated by `}|{`",
        "columnName": "001 ID Source",
        "keyColumnName": "BIB Number",
        "separator": "}|{"
    }
    {
        "op": "core/fill-down",
        "description": "Fill down cells in column ``URL Domain``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "URL Domain"
    },
    {
        "op": "core/fill-down",
        "description": "Fill down cells in column ``001 ID Source``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "001 ID Source"
    },
    {
        "op": "core/column-addition",
        "description": "Create column ``IDs`` combining values of ``URL Domain`` and ``001 ID Source`` seperated by `}|{`",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "baseColumnName": "URL Domain",
        "expression": "grel:if(isBlank(value),if(isBlank(cells[\"001 ID Source\"].value),\"[null]\",cells[\"001 ID Source\"].value),if(isBlank(cells[\"001 ID Source\"].value),value,value+\"}|{\"+cells[\"001 ID Source\"].value))",
        "onError": "set-to-blank",
        "newColumnName": "IDs",
        "columnInsertIndex": 2
    }
    {
        "op": "core/column-removal",
        "description": "Remove column ``URL Domain``",
        "columnName": "URL Domain"
    },
    {
        "op": "core/column-removal",
        "description": "Remove column ``001 ID Source``",
        "columnName": "001 ID Source"
    },
    {
        "op": "core/blank-down",
        "description": "Blank down cells in column ``IDs``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "IDs"
    }
    {
        "op": "core/row-removal",
        "description": "Remove rows with ``Fields`` values `035$a`, `599$a`, `856$u` and no BIB number",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "Fields",
                    "expression": "value",
                    "columnName": "Fields",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": "035$a",
                                "l": "035$a"
                            }
                        },
                        {
                            "v": {
                                "v": "856$u",
                                "l": "856$u"
                            }
                        },
                        {
                            "v": {
                                "v": "599$a",
                                "l": "599$a"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                },
                {
                    "type": "list",
                    "name": "BIB Number",
                    "expression": "isBlank(value)",
                    "columnName": "BIB Number",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": true,
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        }
    },
    {
        "op": "core/text-transform",
        "description": "Null the values in ``Values`` for rows where ``Fields`` has the value `035$a`, `599$a`, `856$u` and ``BIB Number`` has the record's BIB",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "Fields",
                    "expression": "value",
                    "columnName": "Fields",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": "035$a",
                                "l": "035$a"
                            }
                        },
                        {
                            "v": {
                                "v": "856$u",
                                "l": "856$u"
                            }
                        },
                        {
                            "v": {
                                "v": "599$a",
                                "l": "599$a"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "columnName": "Values",
        "expression": "null",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    },
    {
        "op": "core/text-transform",
        "description": "Null `035$a`, `599$a`, `856$u` values in column ``Fields`` in rows that have the record's BIB",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "Fields",
                    "expression": "value",
                    "columnName": "Fields",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": "035$a",
                                "l": "035$a"
                            }
                        },
                        {
                            "v": {
                                "v": "856$u",
                                "l": "856$u"
                            }
                        },
                        {
                            "v": {
                                "v": "599$a",
                                "l": "599$a"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "columnName": "Fields",
        "expression": "null",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/column-removal",
        "description": "Remove column ``Fields``",
        "columnName": "Fields"
    },
    {
        "op": "core/multivalued-cell-join",
        "description": "Combine all values in column ``Values`` for a record in the first row seperated by `}|{`",
        "columnName": "Values",
        "keyColumnName": "BIB Number",
        "separator": "}|{"
    },
    {
        "op": "core/multivalued-cell-split",
        "description": "Split column ``IDs`` into a new row at each `}|{`",
        "columnName": "IDs",
        "keyColumnName": "BIB Number",
        "mode": "separator",
        "separator": "}|{",
        "regex": false
    }
    {
        "op": "core/fill-down",
        "description": "Fill down cells in column ``Values``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "Values"
    },
    {
        "op": "core/fill-down",
        "description": "Fill down cells in column ``Title``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "Title"
    },
    {
        "op": "core/fill-down",
        "description": "Fill down cells in column ``BIB Number``",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "BIB Number"
    },
    {
        "op": "core/text-transform",
        "description": "Append BIB to front of ``IDs`` seperated by `@`",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "IDs",
        "expression": "grel:cells[\"BIB Number\"].value+\"@\"+value",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/row-reorder",
        "description": "Reorder rows based on ``IDs``",
        "mode": "row-based",
        "sorting": {
            "criteria": [
                {
                    "valueType": "string",
                    "column": "IDs",
                    "blankPosition": 2,
                    "errorPosition": 1,
                    "reverse": false,
                    "caseSensitive": false
                }
            ]
        }
    },
    {
        "op": "core/blank-down",
        "description": "Blank down cells in column ``BIB Number``",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "BIB Number"
    }
    {
        "op": "core/blank-down",
        "description": "Blank down cells in column ``IDs``",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "IDs"
    },
    {
        "op": "core/row-removal",
        "description": "Remove rows with no value in ``IDs``",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "IDs",
                    "expression": "isBlank(value)",
                    "columnName": "IDs",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": true,
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        }
    },
    {
        "op": "core/text-transform",
        "description": "Remove BIB and `@` from beginning of `IDs` value",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "IDs",
        "expression": "grel:substring(value,indexOf(value,\"@\")+1)",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/blank-down",
        "description": "Blank down cells in column ``Title``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "Title"
    },
    {
        "op": "core/blank-down",
        "description": "Blank down cells in column ``Values``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "Values"
    },
    {
        "op": "core/column-addition",
        "description": "Create column ``Duplicate`` containing ID source and ID in only the rows where that info has a duplicate value",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "IDs",
                    "expression": "facetCount(value, 'value', 'IDs') > 1",
                    "columnName": "IDs",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": true,
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "baseColumnName": "IDs",
        "expression": "grel:value",
        "onError": "set-to-blank",
        "newColumnName": "Duplicate",
        "columnInsertIndex": 2
    }
    {
        "op": "core/text-transform",
        "description": "Null values in ``Duplicate`` containing `[null]`",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "Duplicate",
        "expression": "grel:if(contains(value,\"[null]\"),null,value)",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/column-split",
        "description": "Split column ``IDs`` at `]|[`",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "IDs",
        "guessCellType": false,
        "removeOriginalColumn": false,
        "mode": "separator",
        "separator": "]|[",
        "regex": false,
        "maxColumns": 0
    }
    {
        "op": "core/column-rename",
        "description": "Rename column ``IDs 1`` to ``ID Source``",
        "oldColumnName": "IDs 1",
        "newColumnName": "ID Source"
    },
    {
        "op": "core/column-rename",
        "description": "Rename column ``IDs 2`` to ``ID``",
        "oldColumnName": "IDs 2",
        "newColumnName": "ID"
    },
    {
        "op": "core/column-addition",
        "description": "Create column ``Check`` combining BIB number and ID source",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "baseColumnName": "ID Source",
        "expression": "grel:row.record.cells[\"BIB Number\"].value[0]+\"]|[\"+value",
        "onError": "set-to-blank",
        "newColumnName": "Check",
        "columnInsertIndex": 2
    }
    {
        "op": "core/text-transform",
        "description": "Null all unique values in ``Check``",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "Check",
                    "expression": "facetCount(value, 'value', 'Check') > 1",
                    "columnName": "Check",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": false,
                                "l": "false"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "columnName": "Check",
        "expression": "null",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/text-transform",
        "description": "add `#` to the end of values in column ``ID Source`` for rows where ``Check`` has a value",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "Check",
                    "expression": "isBlank(value)",
                    "columnName": "Check",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": false,
                                "l": "false"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "columnName": "ID Source",
        "expression": "grel:value+\"#\"",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/column-removal",
        "description": "Remove column ``Check``",
        "columnName": "Check"
    }
    {
        "op": "core/column-removal",
        "description": "Remove column ``Duplicate``",
        "columnName": "Duplicate"
    }
    {
        "op": "core/fill-down",
        "description": "Fill down cells in column ``Values``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "Values"
    },
    {
        "op": "core/fill-down",
        "description": "Fill down cells in column ``Title``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "Title"
    },
    {
        "op": "core/fill-down",
        "description": "Fill down cells in column ``BIB Number``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "BIB Number"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
          "facets": [],
          "mode": "record-based"
        },
        "columnName": "IDs",
        "expression": "grel:if(or(value==\"[null]\",endsWith(cells[\"ID Source\"].value,\"#\")),\"null\"+toString(row.record.index+1),value)",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column IDs using expression grel:if(or(value==\"[null]\",endsWith(cells[\"ID Source\"].value,\"#\")),\"null\"+toString(row.record.index+1),value)"
      }
    {
        "op": "core/row-reorder",
        "description": "Reorder rows based on ``ID``",
        "mode": "record-based",
        "sorting": {
            "criteria": [
                {
                    "valueType": "string",
                    "column": "ID",
                    "blankPosition": 2,
                    "errorPosition": 1,
                    "reverse": false,
                    "caseSensitive": false
                }
            ]
        }
    },
    {
        "op": "core/row-reorder",
        "description": "Reorder rows based on ``ID Source``",
        "mode": "record-based",
        "sorting": {
            "criteria": [
                {
                    "valueType": "string",
                    "column": "ID Source",
                    "blankPosition": 2,
                    "errorPosition": 1,
                    "reverse": true,
                    "caseSensitive": false
                }
            ]
        }
    },
    {
        "op": "core/column-move",
        "description": "Move column ``IDs`` to beginning",
        "columnName": "IDs",
        "index": 0
    },
    {
        "op": "core/blank-down",
        "description": "Blank down cells in column ``IDs``",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "IDs"
    },
    {
        "op": "core/column-addition",
        "description": "Create column ``Record Number`` with the number of the record based on the value of ``IDs``",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "baseColumnName": "IDs",
        "expression": "grel:row.record.index+1",
        "onError": "set-to-blank",
        "newColumnName": "Record Number",
        "columnInsertIndex": 2
    }
    {
        "op": "core/column-removal",
        "description": "Remove column ``IDs``",
        "columnName": "IDs"
    }
    {
        "op": "core/text-transform",
        "description": "Null unique values in column ``Record Number``",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "Record Number",
                    "expression": "facetCount(value, 'value', 'Record Number') > 1",
                    "columnName": "Record Number",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": false,
                                "l": "false"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "columnName": "Record Number",
        "expression": "null",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/row-reorder",
        "description": "Reorder rows based on ``BIB Number``",
        "mode": "record-based",
        "sorting": {
            "criteria": [
                {
                    "valueType": "string",
                    "column": "BIB Number",
                    "blankPosition": 2,
                    "errorPosition": 1,
                    "reverse": false,
                    "caseSensitive": false
                }
            ]
        }
    },
    {
        "op": "core/blank-down",
        "description": "Blank down cells in column ``BIB Number``",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "BIB Number"
    }
    {
        "op": "core/blank-down",
        "description": "Blank down cells in column ``Title``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "Title"
    },
    {
        "op": "core/blank-down",
        "description": "Blank down cells in column ``Values``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "Values"
    },
    {
        "op": "core/text-transform",
        "description": "Combine values in columns ``ID Source`` and ``ID`` seperated by `]|[`",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "ID",
        "expression": "grel:cells[\"ID Source\"].value+\"]|[\"+value",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/column-removal",
        "description": "Remove column ``ID Source``",
        "columnName": "ID Source"
    }
    {
        "op": "core/multivalued-cell-join",
        "description": "Combine all values in column ``Record Number`` in a record in the first row divided by pipes",
        "columnName": "Record Number",
        "keyColumnName": "BIB Number",
        "separator": "|"
    },
    {
        "op": "core/multivalued-cell-join",
        "description": "Combine all the rows for ``ID`` in the first row of the record seperated by `}|{`",
        "columnName": "ID",
        "keyColumnName": "BIB Number",
        "separator": "}|{"
    }
    {
        "op": "core/multivalued-cell-split",
        "description": "Divide values in column ``Values`` into new rows at each '}|{`",
        "columnName": "Values",
        "keyColumnName": "BIB Number",
        "mode": "separator",
        "separator": "}|{",
        "regex": false
    },
    {
        "op": "core/column-split",
        "description": "Split column ``Values`` at each `]|[`",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "Values",
        "guessCellType": false,
        "removeOriginalColumn": true,
        "mode": "separator",
        "separator": "]|[",
        "regex": false,
        "maxColumns": 0
    }
    {
        "op": "core/column-addition",
        "description": "Create column ``Temp`` combining field number, number of field within record, and BIB Number",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "newColumnName": "Temp",
        "columnInsertIndex": 0,
        "baseColumnName": "Values 1",
        "expression": "grel:substring(value,0,indexOf(value,\"$\"))+\"-\"+row.record.cells[\"BIB Number\"].value[0]",
        "onError": "set-to-blank"
    }
    {
        "op": "core/blank-down",
        "description": "Blank down cells in column ``Temp``",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Temp"
    },
    {
        "description": "Bring each field onto one line",
        "op": "core/text-transform",
        "description": "Remove field numbers from values in column ``Values 1``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "Values 1",
        "expression": "grel:substring(value,-5)",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/column-addition",
        "description": "Create column ``Count`` to keep all values during the pivot",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "newColumnName": "Count",
        "columnInsertIndex": 1,
        "baseColumnName": "Temp",
        "expression": "grel:row.record.cells[\"Temp\"].value[0]+\"-\"+toString(row.index-row.record.fromRowIndex+1)",
        "onError": "set-to-blank"
    },
    {
        "op": "core/key-value-columnize",
        "description": "Pivot data so values in ``Values 1`` are columns with values from ``Values 2``",
        "keyColumnName": "Values 1",
        "valueColumnName": "Values 2",
        "noteColumnName": ""
    }
    {
        "op": "core/column-removal",
        "description": "Remove column ``Count``",
        "columnName": "Count"
    }
    {
        "op": "core/multivalued-cell-join",
        "description": "Join all values in column ``020$a`` for a record in its first cell divided by pipes",
        "columnName": "020$a",
        "keyColumnName": "Temp",
        "separator": "|"
    }
    {
        "op": "core/multivalued-cell-join",
        "description": "Join all values in column ``020$z`` for a record in its first cell divided by pipes",
        "columnName": "020$z",
        "keyColumnName": "Temp",
        "separator": "|"
    }
    {
        "op": "core/multivalued-cell-join",
        "description": "Join all values in column ``776$z`` for a record in its first cell divided by pipes",
        "columnName": "776$z",
        "keyColumnName": "Temp",
        "separator": "|"
    },
    {
        "op": "core/multivalued-cell-join",
        "description": "Join all values in column ``020$q`` for a record in its first cell divided by pipes",
        "columnName": "020$q",
        "keyColumnName": "Temp",
        "separator": ";"
    },
    {
        "op": "core/multivalued-cell-join",
        "description": "Join all values in column ``776$i`` for a record in its first cell divided by pipes",
        "columnName": "776$i",
        "keyColumnName": "Temp",
        "separator": "|"
    },
    {
        "op": "core/column-removal",
        "description": "Remove column ``Temp``",
        "columnName": "Temp"
    }
    {
        "op": "core/column-addition",
        "description": "Create column ``All Others Blank`` with value indicating if every other cell in the row is blank",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "newColumnName": "All Others Blank",
        "columnInsertIndex": 1,
        "baseColumnName": "BIB Number",
        "expression": "grel:toString(filter(row.columnNames,cn,isNonBlank(cells[cn].value)).length()==0)",
        "onError": "set-to-blank"
    },
    {
        "op": "core/row-removal",
        "description": "Remove rows where value of ``All Others Blank`` is `true`",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "All Others Blank",
                    "expression": "value",
                    "columnName": "All Others Blank",
                    "invert": false,
                    "selection": [
                        {
                            "v": {
                                "v": "true",
                                "l": "true"
                            }
                        }
                    ],
                    "selectNumber": false,
                    "selectDateTime": false,
                    "selectBoolean": false,
                    "omitBlank": false,
                    "selectBlank": false,
                    "omitError": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        }
    },
    {
        "op": "core/column-removal",
        "description": "Remove column ``All Others Blank``",
        "columnName": "All Others Blank"
    }
    {
        "description": "Split repeated subfields",
        "op": "core/column-addition",
        "description": "Create column ``020$a Split`` at start of table with value indicating if 020$a values in row will be split",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "baseColumnName": "020$a",
        "expression": "grel:if(isNull(value),\"N/A\",toString(contains(value,\"|\")))",
        "onError": "set-to-blank",
        "newColumnName": "020$a Split",
        "columnInsertIndex": 0
    },
    {
        "op": "core/multivalued-cell-split",
        "description": "Split values containing pipes in column ``020$a`` at pipes into new rows within the same record",
        "columnName": "020$a",
        "keyColumnName": "BIB Number",
        "mode": "separator",
        "separator": "|",
        "regex": false
    },
    {
        "op": "core/fill-down",
        "description": "For ``020$a Split`` records with value `true`, fill down cells in column ``020$q``",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "Split",
                    "expression": "value",
                    "columnName": "Split",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": "true",
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "record-based"
        },
        "columnName": "020$q"
    }
    {
        "op": "core/column-removal",
        "description": "Remove column ``020$a Split``",
        "columnName": "020$a Split"
    },
    {
        "op": "core/column-addition",
        "description": "Create column ``020$z Split`` at start of table with value indicating if 020$z values in row will be split",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "baseColumnName": "020$z",
        "expression": "grel:if(isNull(value),\"N/A\",toString(contains(value,\"|\")))",
        "onError": "set-to-blank",
        "newColumnName": "020$z Split",
        "columnInsertIndex": 0
    },
    {
        "op": "core/multivalued-cell-split",
        "description": "Split values containing pipes in column ``020$z`` at pipes into new rows within the same record",
        "columnName": "020$z",
        "keyColumnName": "BIB Number",
        "mode": "separator",
        "separator": "|",
        "regex": false
    },
    {
        "op": "core/fill-down",
        "description": "For ``020$z Split`` records with value `true`, fill down cells in column ``020$q``",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "Split",
                    "expression": "value",
                    "columnName": "Split",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": "true",
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "record-based"
        },
        "columnName": "020$q"
    }
    {
        "op": "core/column-removal",
        "description": "Remove column ``020$z Split``",
        "columnName": "020$z Split"
    },
    {
        "op": "core/column-addition",
        "description": "Create column ``776$z Split`` at start of table with value indicating if 776$z values in row will be split",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "baseColumnName": "776$z",
        "expression": "grel:if(isNull(value),\"N/A\",toString(contains(value,\"|\")))",
        "onError": "set-to-blank",
        "newColumnName": "776$z Split",
        "columnInsertIndex": 0
    },
    {
        "op": "core/multivalued-cell-split",
        "description": "Split values containing pipes in column ``776$z`` at pipes into new rows within the same record",
        "columnName": "776$z",
        "keyColumnName": "BIB Number",
        "mode": "separator",
        "separator": "|",
        "regex": false
    },
    {
        "op": "core/fill-down",
        "description": "For ``776$z Split`` records with value `true`, fill down cells in column ``776$i``",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "Split",
                    "expression": "value",
                    "columnName": "Split",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": "true",
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "record-based"
        },
        "columnName": "776$i"
    }
    {
        "op": "core/column-removal",
        "description": "Remove column ``776$z Split``",
        "columnName": "776$z Split"
    },
    {
        "op": "core/text-transform",
        "description": "Null all blank cells in column ``020$a``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "020$a",
        "expression": "grel:if(isBlank(value),null,value)",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/text-transform",
        "description": "Null all blank cells in column ``020$z``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "020$z",
        "expression": "grel:if(isBlank(value),null,value)",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/text-transform",
        "description": "Null all blank cells in column ``020$q``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "020$q",
        "expression": "grel:if(isBlank(value),null,value)",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/text-transform",
        "description": "Null all blank cells in column ``776$i``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "776$i",
        "expression": "grel:if(isBlank(value),null,value)",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/text-transform",
        "description": "Null all blank cells in column ``776$z``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "776$z",
        "expression": "grel:if(isBlank(value),null,value)",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "description": "Append type information to each ISBN",
        "op": "core/text-transform",
        "description": "Add pipe between ISBN and descriptor in 020$a and add 020$q value in row after pipe",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "020$a",
        "expression": "grel:if(isNotNull(value),if(and(indexOf(value,\" \")==-1, indexOf(value,\"(\")==-1),if(isNotNull(cells[\"020$q\"].value),value+\"|\"+cells[\"020$q\"].value,value+\"|020$a\"),if(isNotNull(cells[\"020$q\"].value),if(and(indexOf(value,\" \")!=-1, indexOf(value,\"(\")!=-1),substring(value,0,min(indexOf(value,\" \"), indexOf(value,\"(\")))+\"|\"+trim(substring(value,min(indexOf(value,\" \"), indexOf(value,\"(\"))))+\"; \"+cells[\"020$q\"].value,if(indexOf(value,\" \")==-1,substring(value,0,indexOf(value,\"(\"))+\"|\"+trim(substring(value,indexOf(value,\"(\")))+\"; \"+cells[\"020$q\"].value,substring(value,0,indexOf(value,\" \"))+\"|\"+trim(substring(value,indexOf(value,\" \")))+\"; \"+cells[\"020$q\"].value)),if(and(indexOf(value,\" \")!=-1, indexOf(value,\"(\")!=-1),substring(value,0,min(indexOf(value,\" \"), indexOf(value,\"(\")))+\"|\"+trim(substring(value,min(indexOf(value,\" \"), indexOf(value,\"(\")))),if(indexOf(value,\" \")==-1,substring(value,0,indexOf(value,\"(\"))+\"|\"+trim(substring(value,indexOf(value,\"(\"))),substring(value,0,indexOf(value,\" \"))+\"|\"+trim(substring(value,indexOf(value,\" \"))))))),null)",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    },
    {
        "op": "core/text-transform",
        "description": "Add pipe between ISBN and descriptor in 020$z and add 020$q value in row after pipe",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "020$z",
        "expression": "grel:if(isNotNull(value),if(and(indexOf(value,\" \")==-1, indexOf(value,\"(\")==-1),if(isNotNull(cells[\"020$q\"].value),value+\"|\"+cells[\"020$q\"].value,value+\"|020$z\"),if(isNotNull(cells[\"020$q\"].value),if(and(indexOf(value,\" \")!=-1, indexOf(value,\"(\")!=-1),substring(value,0,min(indexOf(value,\" \"), indexOf(value,\"(\")))+\"|\"+trim(substring(value,min(indexOf(value,\" \"), indexOf(value,\"(\"))))+\"; \"+cells[\"020$q\"].value,if(indexOf(value,\" \")==-1,substring(value,0,indexOf(value,\"(\"))+\"|\"+trim(substring(value,indexOf(value,\"(\")))+\"; \"+cells[\"020$q\"].value,substring(value,0,indexOf(value,\" \"))+\"|\"+trim(substring(value,indexOf(value,\" \")))+\"; \"+cells[\"020$q\"].value)),if(and(indexOf(value,\" \")!=-1, indexOf(value,\"(\")!=-1),substring(value,0,min(indexOf(value,\" \"), indexOf(value,\"(\")))+\"|\"+trim(substring(value,min(indexOf(value,\" \"), indexOf(value,\"(\")))),if(indexOf(value,\" \")==-1,substring(value,0,indexOf(value,\"(\"))+\"|\"+trim(substring(value,indexOf(value,\"(\"))),substring(value,0,indexOf(value,\" \"))+\"|\"+trim(substring(value,indexOf(value,\" \"))))))),null)",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    },
    {
        "op": "core/text-transform",
        "description": "Add pipe between ISBN and descriptor in 776$z and add 776$i value in row after pipe",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "776$z",
        "expression": "grel:if(isNotNull(value),if(and(indexOf(value,\" \")==-1, indexOf(value,\"(\")==-1),if(isNotNull(cells[\"776$i\"].value),value+\"|\"+cells[\"776$i\"].value,value+\"|776$z\"),if(isNotNull(cells[\"776$i\"].value),if(and(indexOf(value,\" \")!=-1, indexOf(value,\"(\")!=-1),substring(value,0,min(indexOf(value,\" \"), indexOf(value,\"(\")))+\"|\"+trim(substring(value,min(indexOf(value,\" \"), indexOf(value,\"(\"))))+\"; \"+cells[\"776$i\"].value,if(indexOf(value,\" \")==-1,substring(value,0,indexOf(value,\"(\"))+\"|\"+trim(substring(value,indexOf(value,\"(\")))+\"; \"+cells[\"776$i\"].value,substring(value,0,indexOf(value,\" \"))+\"|\"+trim(substring(value,indexOf(value,\" \")))+\"; \"+cells[\"776$i\"].value)),if(and(indexOf(value,\" \")!=-1, indexOf(value,\"(\")!=-1),substring(value,0,min(indexOf(value,\" \"), indexOf(value,\"(\")))+\"|\"+trim(substring(value,min(indexOf(value,\" \"), indexOf(value,\"(\")))),if(indexOf(value,\" \")==-1,substring(value,0,indexOf(value,\"(\"))+\"|\"+trim(substring(value,indexOf(value,\"(\"))),substring(value,0,indexOf(value,\" \"))+\"|\"+trim(substring(value,indexOf(value,\" \"))))))),null)",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    },
    {
        "description": "Organize ISBN type information",
        "op": "core/column-removal",
        "description": "Remove column ``020$q``",
        "columnName": "020$q"
    },
    {
        "op": "core/column-removal",
        "description": "Remove column ``776$i``",
        "columnName": "776$i"
    },
    {
        "op": "core/column-addition",
        "description": "Create column ``All Others Blank`` with value indicating if every other cell in the row is blank",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "newColumnName": "All Others Blank",
        "columnInsertIndex": 1,
        "baseColumnName": "BIB Number",
        "expression": "grel:toString(filter(row.columnNames,cn,isNonBlank(cells[cn].value)).length()==0)",
        "onError": "set-to-blank"
    },
    {
        "op": "core/row-removal",
        "description": "Remove rows where value of ``All Others Blank`` is `true`",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "All Others Blank",
                    "expression": "value",
                    "columnName": "All Others Blank",
                    "invert": false,
                    "selection": [
                        {
                            "v": {
                                "v": "true",
                                "l": "true"
                            }
                        }
                    ],
                    "selectNumber": false,
                    "selectDateTime": false,
                    "selectBoolean": false,
                    "omitBlank": false,
                    "selectBlank": false,
                    "omitError": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        }
    },
    {
        "op": "core/column-removal",
        "description": "Remove column ``All Others Blank``",
        "columnName": "All Others Blank"
    }
    {
        "op": "core/column-addition",
        "description": "Create column ``Count``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "newColumnName": "Count",
        "columnInsertIndex": 1,
        "baseColumnName": "BIB Number",
        "expression": "grel:row.record.cells[\"BIB Number\"].value[0]+\"-\"+toString(row.index-row.record.fromRowIndex+1)",
        "onError": "set-to-blank"
    },
    {
        "op": "core/transpose-columns-into-rows",
        "description": "Transpose values in columns ``020$a`` ``020$z`` ``776$z`` into single column ``ISBN`` with new column named ``ISBN Subfield`` containing the old column names",
        "startColumnName": "020$a",
        "columnCount": 3,
        "ignoreBlankCells": true,
        "fillDown": false,
        "keyColumnName": "ISBN Subfield",
        "valueColumnName": "ISBN"
    }
    {
        "op": "core/column-removal",
        "description": "Remove column ``Count``",
        "columnName": "Count"
    }
    {
        "op": "core/column-split",
        "description": "Split column ``ISBN`` at pipe",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "ISBN",
        "guessCellType": false,
        "removeOriginalColumn": true,
        "mode": "separator",
        "separator": "|",
        "regex": false,
        "maxColumns": 2
    },
    {
        "op": "core/column-rename",
        "description": "Rename column ``ISBN 1`` to ``ISBN Value``",
        "oldColumnName": "ISBN 1",
        "newColumnName": "ISBN Value"
    },
    {
        "op": "core/column-rename",
        "description": "Rename column ``ISBN 2`` to ``ISBN Type``",
        "oldColumnName": "ISBN 2",
        "newColumnName": "ISBN Type"
    },
    {
        "op": "core/text-transform",
        "description": "Remove DOI prefix from DOIs in column ``ISBN Value``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "ISBN Value",
        "expression": "grel:if(isError(find(value,/10\\.[\\w\\.]+\\/[\\w\\.\\-]+$/)[0]),value,substring(value,indexOf(value,\"/\")+1))",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/column-addition",
        "description": "Create column ``ISBN Length`` based off the length of the value in ``ISBN Value`` in that row",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "newColumnName": "ISBN Length",
        "columnInsertIndex": 6,
        "baseColumnName": "ISBN Value",
        "expression": "grel:toString(length(value))",
        "onError": "set-to-blank"
    }
    {
        "op": "core/text-transform",
        "description": "Remove final character from values in column ``ISBN Value`` with 14 characters",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "ISBN Length",
                    "expression": "value",
                    "columnName": "ISBN Length",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": "14",
                                "l": "14"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "columnName": "ISBN Value",
        "expression": "grel:substring(value,0,-1)",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    },
    {
        "op": "core/text-transform",
        "description": "Remove dashes from values in column ``ISBN Value`` with 17 characters",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "ISBN Length",
                    "expression": "value",
                    "columnName": "ISBN Length",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": "17",
                                "l": "17"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "columnName": "ISBN Value",
        "expression": "grel:replace(value,\"-\",\"\")",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    },
    {
        "op": "core/text-transform",
        "description": "Replace values in column ``ISBN Type`` with the letters at the end of the values in ``ISBN Values`` that are 18 or 20 characters long",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "ISBN Length",
                    "expression": "value",
                    "columnName": "ISBN Length",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": "18",
                                "l": "18"
                            }
                        },
                        {
                            "v": {
                                "v": "20",
                                "l": "20"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "columnName": "ISBN Type",
        "expression": "grel:splitByCharType(cells[\"ISBN Value\"].value)[1]",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    },
    {
        "op": "core/text-transform",
        "description": "Remove the letters from the end of values in column ``ISBN Value`` that are 18 or 20 characters long",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "ISBN Length",
                    "expression": "value",
                    "columnName": "ISBN Length",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": "18",
                                "l": "18"
                            }
                        },
                        {
                            "v": {
                                "v": "20",
                                "l": "20"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "columnName": "ISBN Value",
        "expression": "grel:splitByCharType(cells[\"ISBN Value\"].value)[0]",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    },
    {
        "op": "core/text-transform",
        "description": "Remove encoding value `&#x0009` from values in column ``ISBN Value`` that are 21 charaters long",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "ISBN Length",
                    "expression": "value",
                    "columnName": "ISBN Length",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": "21",
                                "l": "21"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "columnName": "ISBN Value",
        "expression": "grel:replace(value,\"&#x0009;\",\"\")",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    },
    {
        "op": "core/multivalued-cell-split",
        "description": "Split values in column ``ISBN Value`` into new rows at `u`",
        "columnName": "ISBN Value",
        "keyColumnName": "BIB Number",
        "mode": "separator",
        "separator": "u",
        "regex": false
    },
    {
        "op": "core/fill-down",
        "description": "Fill down cells in column ``ISBN Subfield`` in records with an ``ISBN Length`` value of 27",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "ISBN Length",
                    "expression": "value",
                    "columnName": "ISBN Length",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": "27",
                                "l": "27"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "record-based"
        },
        "columnName": "ISBN Subfield"
    },
    {
        "op": "core/fill-down",
        "description": "Fill down cells in column ``ISBN Type`` in records with an ``ISBN Length`` value of 27",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "ISBN Length",
                    "expression": "value",
                    "columnName": "ISBN Length",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": "27",
                                "l": "27"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "record-based"
        },
        "columnName": "ISBN Type"
    }
    {
        "op": "core/text-transform",
        "description": "Update values in column ``ISBN Length``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "ISBN Length",
        "expression": "grel:toString(length(cells[\"ISBN Value\"].value))",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
]