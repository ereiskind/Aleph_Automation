[
    {
        "op": "core/multivalued-cell-join",
        "description": "Combine all values in column ``BIB Number`` in a record in the first row of the record divided by `]}|{[`",
        "columnName": "BIB Number",
        "keyColumnName": "No Subtitle Record Number",
        "separator": "]}|{["
    },
    {
        "op": "core/multivalued-cell-join",
        "description": "Combine all values in column ``Title`` in a record in the first row of the record divided by `]}|{[`",
        "columnName": "Title",
        "keyColumnName": "No Subtitle Record Number",
        "separator": "]}|{["
    },
    {
        "op": "core/multivalued-cell-join",
        "description": "Combine all values in column ``ID`` in a record in the first row of the record divided by `]}|{[`",
        "columnName": "ID",
        "keyColumnName": "No Subtitle Record Number",
        "separator": "]}|{["
    },
    {
        "op": "core/multivalued-cell-join",
        "description": "Combine all values in column ``ISBN Value`` in a record in the first row of the record divided by `]}|{[`",
        "columnName": "ISBN Value",
        "keyColumnName": "No Subtitle Record Number",
        "separator": "]}|{["
    }
    {
        "op": "core/column-removal",
        "description": "Remove column ``No Subtitle Record Number``",
        "columnName": "No Subtitle Record Number"
    },
    {
        "op": "core/column-addition",
        "description": "Create column ``Record Number`` containing the number of the record",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "baseColumnName": "BIB Number",
        "expression": "grel:row.record.index+1",
        "onError": "set-to-blank",
        "newColumnName": "Record Number",
        "columnInsertIndex": 0
    }
    {
        "op": "core/multivalued-cell-split",
        "description": "Split values in column ``BIB Number`` into new rows at `]}|{[``",
        "columnName": "BIB Number",
        "keyColumnName": "Record Number",
        "mode": "separator",
        "separator": "]}|{[",
        "regex": false
    }
    {
        "op": "core/multivalued-cell-split",
        "description": "Split values in column ``Title`` into new rows at `]}|{[``",
        "columnName": "Title",
        "keyColumnName": "Record Number",
        "mode": "separator",
        "separator": "]}|{[",
        "regex": false
    },
    {
        "op": "core/multivalued-cell-split",
        "description": "Split values in column ``ID`` into new rows at `]}|{[``",
        "columnName": "ID",
        "keyColumnName": "Record Number",
        "mode": "separator",
        "separator": "]}|{[",
        "regex": false
    },
    {
        "op": "core/multivalued-cell-split",
        "description": "Split values in column ``ISBN Value`` into new rows at `]}|{[``",
        "columnName": "ISBN Value",
        "keyColumnName": "Record Number",
        "mode": "separator",
        "separator": "]}|{[",
        "regex": false
    },
    {
        "op": "core/fill-down",
        "description": "Fill down cells in column ``Record Number``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "Record Number"
    },
    {
        "op": "core/column-move",
        "description": "Move column ``BIB Number`` to beginning of table",
        "columnName": "BIB Number",
        "index": 0
    }
    {
        "op": "core/column-addition",
        "description": "Create column ``Dedupe`` combining values of ``BIB Number`` and ``Record Number``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "baseColumnName": "BIB Number",
        "expression": "grel:value+\"-\"+cells[\"Record Number\"].value",
        "onError": "set-to-blank",
        "newColumnName": "Dedupe",
        "columnInsertIndex": 1
    },
    {
        "op": "core/row-reorder",
        "description": "Reorder rows based on ``Dedupe``",
        "mode": "record-based",
        "sorting": {
            "criteria": [
                {
                    "valueType": "string",
                    "column": "Dedupe",
                    "blankPosition": 2,
                    "errorPosition": 1,
                    "reverse": false,
                    "caseSensitive": false
                }
            ]
        }
    },
    {
        "op": "core/blank-down",
        "description": "Blank down cells in column ``Dedupe``",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Dedupe"
    },
    {
        "op": "core/row-removal",
        "description": "Remove rows with no value in ``Dedupe``",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "Dedupe",
                    "expression": "isBlank(value)",
                    "columnName": "Dedupe",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": true,
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        }
    }
    {
        "op": "core/column-removal",
        "description": "Remove column ``Dedupe``",
        "columnName": "Dedupe"
    },
    {
        "op": "core/row-reorder",
        "description": "Reorder rows based on ``Record Number``",
        "mode": "record-based",
        "sorting": {
            "criteria": [
                {
                    "valueType": "number",
                    "column": "Record Number",
                    "blankPosition": 2,
                    "errorPosition": 1,
                    "reverse": false
                }
            ]
        }
    }
    {
        "op": "core/multivalued-cell-split",
        "description": "Split values in column ``ID`` into new rows at `}|{``",
        "columnName": "ID",
        "keyColumnName": "BIB Number",
        "mode": "separator",
        "separator": "}|{",
        "regex": false
    },
    {
        "op": "core/fill-down",
        "description": "Fill down cells in column ``ISBN Value``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "ISBN Value"
    },
    {
        "op": "core/fill-down",
        "description": "Fill down cells in column ``Title``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "Title"
    },
    {
        "op": "core/fill-down",
        "description": "Fill down cells in column ``Record Number``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "Record Number"
    },
    {
        "op": "core/fill-down",
        "description": "Fill down cells in column ``BIB Number``",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "BIB Number"
    },
    {
        "op": "core/text-transform",
        "description": "Revert string `null` in ``ID`` back to null value",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "ID",
        "expression": "grel:if(value==\"null\",null,value)",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    },
    {
        "op": "core/text-transform",
        "description": "Revert string `null` in ``ISBN Value`` back to null value",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "ISBN Value",
        "expression": "grel:if(value==\"null\",null,value)",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    },
    {
        "op": "core/column-move",
        "description": "Move column ``Record Number`` to beginning of table",
        "columnName": "Record Number",
        "index": 0
    }
    {
        "op": "core/column-split",
        "description": "Split column ``ID`` at `]|[`",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "ID",
        "guessCellType": false,
        "removeOriginalColumn": false,
        "mode": "separator",
        "separator": "]|[",
        "regex": false,
        "maxColumns": 0
    }
    {
        "op": "core/blank-down",
        "description": "Blank down cells in column ``Record Number``",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Record Number"
    }
    {
        "op": "core/text-transform",
        "description": "Remove hash from end of values in column ``ID 1``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "ID 1",
        "expression": "grel:if(endsWith(value,\"#\"),substring(value,0,-1),value)",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/column-addition",
        "description": "Create column ``Pivot`` to keep records together during the pivot",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "baseColumnName": "Record Number",
        "expression": "grel:toString(row.record.index)+\"-\"+toString(row.index-row.record.fromRowIndex)",
        "onError": "set-to-blank",
        "newColumnName": "Pivot",
        "columnInsertIndex": 1
    },
    {
        "op": "core/key-value-columnize",
        "description": "Pivot table to create columns for values in ``ID 1`` containing the values in ``ID 2``",
        "keyColumnName": "ID 1",
        "valueColumnName": "ID 2",
        "noteColumnName": ""
    },
    {
        "op": "core/column-removal",
        "description": "Remove column ``Pivot``",
        "columnName": "Pivot"
    }
    {
        "op": "core/column-addition",
        "description": "Create column ``Status`` with a value depending on the value of ``Ebook Central``--`No ID` is the record has no value,  `Match` if the row is null or matches the record's first value, and `No Match` if the row doesn't match the record's first value",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "Status",
                    "expression": "value",
                    "columnName": "Status",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": "mismatch",
                                "l": "mismatch"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "record-based"
        },
        "baseColumnName": "Ebook Central",
        "expression": "grel:if(isError(row.record.cells[\"Ebook Central\"].value[0]),\"No ID\",if(or(value==null,value==row.record.cells[\"Ebook Central\"].value[0]),\"Match\",\"No Match\"))",
        "onError": "set-to-blank",
        "newColumnName": "Status",
        "columnInsertIndex": 10
    },
    {
        "op": "core/text-transform",
        "description": "For records that had exactly one Ebook Central ID, change ``Record Number`` to `Ebook Central::` followed by the Ebook Central ID",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "Status",
                    "expression": "value",
                    "columnName": "Status",
                    "invert": true,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": "No Match",
                                "l": "No Match"
                            }
                        },
                        {
                            "v": {
                                "v": "No ID",
                                "l": "No ID"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "record-based"
        },
        "columnName": "Record Number",
        "expression": "grel:if(isNotNull(value),\"Ebook Central::\"+row.record.cells[\"Ebook Central\"].value[0],value)",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "Text transform on cells in column Record Number using expression grel:if(isNotNull(value),\"Ebook Central::\"+row.record.cells[\"Ebook Central\"].value[0],value)"
    }
    {
        "op": "core/column-addition",
        "description": "Create column ``ID Record Number`` with `Ebook Central::` followed by the Ebook Central ID in records that had exactly one ID",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "Status",
                    "expression": "value",
                    "columnName": "Status",
                    "invert": true,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": "No Match",
                                "l": "No Match"
                            }
                        },
                        {
                            "v": {
                                "v": "No ID",
                                "l": "No ID"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "record-based"
        },
        "baseColumnName": "BIB Number",
        "expression": "grel:\"Ebook Central::\"+row.record.cells[\"Ebook Central\"].value[0]",
        "onError": "set-to-blank",
        "newColumnName": "ID Record Number",
        "columnInsertIndex": 2
    },
    {
        "op": "core/text-transform",
        "description": "Null values in column ``Ebook Central`` for records with the ID in ``ID Record Number``",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "Status",
                    "expression": "value",
                    "columnName": "Status",
                    "invert": true,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": "No Match",
                                "l": "No Match"
                            }
                        },
                        {
                            "v": {
                                "v": "No ID",
                                "l": "No ID"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "record-based"
        },
        "columnName": "Ebook Central",
        "expression": "null",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    },
    {
        "op": "core/text-transform",
        "description": "For a record with the value `No Match` in ``Status``, change all the values in ``Status`` to `No Match`",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "Status",
                    "expression": "value",
                    "columnName": "Status",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": "No Match",
                                "l": "No Match"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "record-based"
        },
        "columnName": "Status",
        "expression": "grel:\"No Match\"",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/text-transform",
        "description": "For records that contain multiple Ebook Central IDs, change the value of ``Record Number`` in all rows to the BIB, a dash, and the record number",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "Status",
                    "expression": "value",
                    "columnName": "Status",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": "No Match",
                                "l": "No Match"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "record-based"
        },
        "columnName": "Record Number",
        "expression": "grel:cells[\"BIB Number\"].value+\"-\"+row.record.cells[\"Record Number\"].value[0]",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    },
    {
        "op": "core/fill-down",
        "description": "Fill down cells in column ``Record Number``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "Record Number"
    },
    {
        "op": "core/column-reorder",
        "description": "Remove unneeded ID columns and make ``BIB Number`` first column",
        "columnNames": [
            "BIB Number",
            "Record Number",
            "Title",
            "ID",
            "ISBN Value",
            "Ebook Central",
            "MyiLibrary",
            "Ebrary",
            "Ebook Library",
            "DOI"
        ]
    }
    {
        "op": "core/blank-down",
        "description": "Blank down cells in column ``BIB Number``",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "BIB Number"
    },
    {
        "op": "core/blank-down",
        "description": "Blank down cells in column ``Record Number``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "Record Number"
    },
    {
        "op": "core/blank-down",
        "description": "Blank down cells in column ``Title``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "Title"
    },
    {
        "op": "core/blank-down",
        "description": "Blank down cells in column ``ISBN Value``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "ISBN Value"
    }
    {
        "op": "core/multivalued-cell-join",
        "description": "Combine all values in column ``Ebook Central`` in a record in the first row of the record divided by pipes",
        "columnName": "Ebook Central",
        "keyColumnName": "BIB Number",
        "separator": "|"
    },
    {
        "op": "core/text-transform",
        "description": "Null blank cells in column ``Ebook Central``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "Ebook Central",
        "expression": "grel:if(isBlank(value),null,value)",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/multivalued-cell-join",
        "description": "Combine all values in column ``MyiLibrary`` in a record in the first row of the record divided by pipes",
        "columnName": "MyiLibrary",
        "keyColumnName": "BIB Number",
        "separator": "|"
    },
    {
        "op": "core/text-transform",
        "description": "Null blank cells in column ``MyiLibrary``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "MyiLibrary",
        "expression": "grel:if(isBlank(value),null,value)",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/multivalued-cell-join",
        "description": "Combine all values in column ``Ebrary`` in a record in the first row of the record divided by pipes",
        "columnName": "Ebrary",
        "keyColumnName": "BIB Number",
        "separator": "|"
    },
    {
        "op": "core/text-transform",
        "description": "Null blank cells in column ``Ebrary``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "Ebrary",
        "expression": "grel:if(isBlank(value),null,value)",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/multivalued-cell-join",
        "description": "Combine all values in column ``Ebook Library`` in a record in the first row of the record divided by pipes",
        "columnName": "Ebook Library",
        "keyColumnName": "BIB Number",
        "separator": "|",
        "description": "Join multi-valued cells in column Ebook Library"
    },
    {
        "op": "core/text-transform",
        "description": "Null blank cells in column ``Ebook Library``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "Ebook Library",
        "expression": "grel:if(isBlank(value),null,value)",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/multivalued-cell-join",
        "description": "Combine all values in column ``DOI`` in a record in the first row of the record divided by pipes",
        "columnName": "DOI",
        "keyColumnName": "BIB Number",
        "separator": "|"
    },
    {
        "op": "core/text-transform",
        "description": "Null blank cells in column ``DOI``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "DOI",
        "expression": "grel:if(isBlank(value),null,value)",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/column-removal",
        "description": "Remove column ``ID``",
        "columnName": "ID"
    }
    {
        "op": "core/column-addition",
        "description": "Create column ``All Others Blank`` indicating if every other cell in the row is blank",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "newColumnName": "All Others Blank",
        "columnInsertIndex": 1,
        "baseColumnName": "BIB Number",
        "expression": "grel:toString(filter(row.columnNames,cn,isBlank(cells[cn].value)).length()==row.columnNames.split(\",\").length())",
        "onError": "set-to-blank"
    },
    {
        "op": "core/row-removal",
        "description": "Remove rows where the value of ``All Others Blank`` is `true`",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "All Others Blank",
                    "expression": "value",
                    "columnName": "All Others Blank",
                    "invert": false,
                    "selection": [
                        {
                            "v": {
                                "v": "true",
                                "l": "true"
                            }
                        }
                    ],
                    "selectNumber": false,
                    "selectDateTime": false,
                    "selectBoolean": false,
                    "omitBlank": false,
                    "selectBlank": false,
                    "omitError": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        }
    },
    {
        "op": "core/column-removal",
        "description": "Remove column ``All Others Blank``",
        "columnName": "All Others Blank"
    }
    {
        "op": "core/row-reorder",
        "description": "Reorder rows by ``BIB Number``",
        "mode": "record-based",
        "sorting": {
            "criteria": [
                {
                    "valueType": "string",
                    "column": "BIB Number",
                    "blankPosition": 2,
                    "errorPosition": 1,
                    "reverse": false,
                    "caseSensitive": false
                }
            ]
        }
    },
    {
        "op": "core/blank-down",
        "description": "Blank down cells in column ``BIB Number``",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "BIB Number"
    }
    {
        "op": "core/column-split",
        "description": "Split values in column ``Record Number`` at double colon",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "Record Number",
        "guessCellType": false,
        "removeOriginalColumn": false,
        "mode": "separator",
        "separator": "::",
        "regex": false,
        "maxColumns": 0
    },
    {
        "op": "core/column-rename",
        "description": "Rename column ``Record Number 1`` to ``ID Mismatch``",
        "oldColumnName": "Record Number 1",
        "newColumnName": "ID Mismatch"
    }
    {
        "op": "core/text-transform",
        "description": "Null values in ``ID Mismatch`` in rows that don't have Ebook Central IDs",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "Record Number 2",
                    "expression": "isBlank(value)",
                    "columnName": "Record Number 2",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": true,
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "columnName": "ID Mismatch",
        "expression": "null",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    },
    {
        "op": "core/text-transform",
        "description": "Change values in column ``Record Number 1`` to Boolean indicating if all the Ebook Central IDs in the record match",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "ID Mismatch",
        "expression": "grel:if(isError(row.record.cells[\"Record Number 2\"].value[0]),value,if(isNull(cells[\"Record Number 2\"].value),value,row.record.cells[\"Record Number 2\"].value[0]==cells[\"Record Number 2\"].value))",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/column-removal",
        "description": "Remove column ``Record Number 2``",
        "columnName": "Record Number 2"
    }
    {
        "op": "core/column-split",
        "description": "Split values in column ``Record Number`` at dashes",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "Record Number",
                    "expression": "grel:toString(contains(value,\"-\"))",
                    "columnName": "Record Number",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": "true",
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "record-based"
        },
        "columnName": "Record Number",
        "guessCellType": true,
        "removeOriginalColumn": false,
        "mode": "separator",
        "separator": "-",
        "regex": false,
        "maxColumns": 0
    }
    {
        "op": "core/text-transform",
        "description": "Change value in column ``Record Number 1`` to the number of times the value in ``Record Number 2`` appears in that column",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "Record Number",
                    "expression": "grel:toString(contains(value,\"-\"))",
                    "columnName": "Record Number",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": "true",
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "record-based"
        },
        "columnName": "Record Number 1",
        "expression": "grel:if(isNull(cells[\"Record Number 2\"].value),null,facetCount(cells[\"Record Number 2\"].value, 'value', 'Record Number 2'))",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/text-transform",
        "description": "In rows where the value of ``ID Mismatch`` is `false`, change the value of ``Record Number 1`` to `false`",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "ID Mismatch",
                    "expression": "value",
                    "columnName": "ID Mismatch",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": false,
                                "l": "false"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "columnName": "Record Number 1",
        "expression": "grel:\"false\"",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/column-removal",
        "description": "Remove column ``ID Mismatch``",
        "columnName": "ID Mismatch"
    }
]