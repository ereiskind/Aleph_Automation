[
    {
        "op": "core/column-removal",
        "description": "Remove column ``Column 3``",
        "columnName": "Column 3"
    },
    {
        "op": "core/column-rename",
        "description": "Rename column ``Column 1`` to ``BIB Number``",
        "oldColumnName": "Column 1",
        "newColumnName": "BIB Number"
    },
    {
        "op": "core/text-transform",
        "description": "Trim whitespace from cells in column ``BIB Number``",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "BIB Number",
        "expression": "value.trim()",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    },
    {
        "op": "core/text-transform",
        "description": "Remove indicators and extra spaces from cells in column ``Column 2``",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Column 2",
        "expression": "grel:substring(value,0,3)",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    },
    {
        "op": "core/column-rename",
        "description": "Rename column ``Column 2`` to ``Fields``",
        "oldColumnName": "Column 2",
        "newColumnName": "Fields"
    }
    {
        "op": "core/column-rename",
        "description": "Rename column ``Column 4`` to ``Values``",
        "oldColumnName": "Column 4",
        "newColumnName": "Values"
    },
    {
        "op": "core/row-removal",
        "description": "Remove rows where ``Values`` contains a space",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "Fields",
                    "expression": "value",
                    "columnName": "Fields",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": "035",
                                "l": "035"
                            }
                        },
                        {
                            "v": {
                                "v": "599",
                                "l": "599"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                },
                {
                    "type": "list",
                    "name": "Values",
                    "expression": "grel:toString(contains(value,\" \"))",
                    "columnName": "Values",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": "true",
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        }
    }
    {
        "op": "core/row-removal",
        "description": "Remove 856 fields for LC catalog enhancement links",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "Fields",
                    "expression": "value",
                    "columnName": "Fields",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": "856",
                                "l": "856"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                },
                {
                    "type": "list",
                    "name": "Values",
                    "expression": "grel:isError(find(value,/http.*loc\\.gov\\/catdir.*/)[0])",
                    "columnName": "Values",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": false,
                                "l": "false"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        }
    }
    {
        "op": "core/column-addition",
        "description": "Create column ``Numbering`` combining the values of ``BIB Number`` and ``Fields``",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "baseColumnName": "BIB Number",
        "expression": "grel:value+\"-\"+cells.Fields.value",
        "onError": "set-to-blank",
        "newColumnName": "Numbering",
        "columnInsertIndex": 0
    }
    {
        "op": "core/column-addition",
        "description": "Create column ``Keep Number`` with the number of times the value in ``Numbering`` appears",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "newColumnName": "Keep Number",
        "columnInsertIndex": 1,
        "baseColumnName": "Numbering",
        "expression": "grel:facetCount(value,\"value\",\"Numbering\")",
        "onError": "set-to-blank"
    },
    {
        "op": "core/blank-down",
        "description": "Blank down cells in column ``Numbering``",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Numbering"
    },
    {
        "op": "core/column-addition",
        "description": "Create column ``Number`` with the row number for the value in ``Numbering``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "newColumnName": "Number",
        "columnInsertIndex": 1,
        "baseColumnName": "Numbering",
        "expression": "grel:toString(row.index-row.record.fromRowIndex+1)",
        "onError": "set-to-blank"
    },
    {
        "op": "core/text-transform",
        "description": "Turn values in ``Keep Number`` to text",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "Keep Number",
        "expression": "value.toString()",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    },
    {
        "op": "core/text-transform",
        "description": "For fields repeated in a record, add row number to value of ``Fields``",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "Keep Number",
                    "expression": "value",
                    "columnName": "Keep Number",
                    "invert": true,
                    "selection": [
                        {
                            "v": {
                                "v": "1",
                                "l": "1"
                            }
                        }
                    ],
                    "selectNumber": false,
                    "selectDateTime": false,
                    "selectBoolean": false,
                    "omitBlank": false,
                    "selectBlank": false,
                    "omitError": false,
                    "selectError": false
                }
            ],
            "mode": "record-based"
        },
        "columnName": "Fields",
        "expression": "grel:\"Field #\"+cells[\"Number\"].value+\" \"+value",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    },
    {
        "op": "core/column-removal",
        "description": "Remove column ``Numbering``",
        "columnName": "Numbering"
    },
    {
        "op": "core/column-removal",
        "description": "Remove column ``Number``",
        "columnName": "Number"
    },
    {
        "op": "core/column-removal",
        "description": "Remove column ``Keep Number``",
        "columnName": "Keep Number"
    },
    {
        "op": "core/multivalued-cell-split",
        "description": "Divide values in column ``Values`` into new rows at each `$$`",
        "columnName": "Values",
        "keyColumnName": "BIB Number",
        "mode": "separator",
        "separator": "$$",
        "regex": false
    }
    {
        "op": "core/fill-down",
        "description": "Fill down cells in column ``Fields``",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Fields"
    }
    {
        "op": "core/fill-down",
        "description": "Fill down cells in column ``BIB Number``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "BIB Number"
    },
    {
        "op": "core/row-removal",
        "description": "Remove rows with null value in ``Values``",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "Values",
                    "expression": "isBlank(value).toString()",
                    "columnName": "Values",
                    "invert": false,
                    "selection": [
                        {
                            "v": {
                                "v": "true",
                                "l": "true"
                            }
                        }
                    ],
                    "selectNumber": false,
                    "selectDateTime": false,
                    "selectBoolean": false,
                    "omitBlank": false,
                    "selectBlank": false,
                    "omitError": false,
                    "selectError": false
                }
            ],
            "mode": "record-based"
        }
    },
    {
        "op": "core/text-transform",
        "description": "Add subfield delimiter and code to value in ``Fields``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "Fields",
        "expression": "grel:value+\"$\"+substring(cells[\"Values\"].value[0],0,1)",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    },
    {
        "op": "core/text-transform",
        "description": "Remove subfield code from ``Values``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "Values",
        "expression": "grel:substring(value,1)",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/column-addition",
        "description": "Create column ``No Field Number`` with the field and subfield code for the row’s value",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "newColumnName": "No Field Number",
        "columnInsertIndex": 2,
        "baseColumnName": "Fields",
        "expression": "grel:substring(value,-5)",
        "onError": "set-to-blank"
    }
    {
        "op": "core/row-removal",
        "description": "Remove rows for subfields other than 020$a, 020$q, 020$z, 035$a, 245$a, 245$b, 245$n, 250$a, 599$a, 776$i, 776$z, 845$u",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "No Field Number",
                    "expression": "value",
                    "columnName": "No Field Number",
                    "invert": true,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": "020$q",
                                "l": "020$q"
                            }
                        },
                        {
                            "v": {
                                "v": "776$z",
                                "l": "776$z"
                            }
                        },
                        {
                            "v": {
                                "v": "020$a",
                                "l": "020$a"
                            }
                        },
                        {
                            "v": {
                                "v": "250$a",
                                "l": "250$a"
                            }
                        },
                        {
                            "v": {
                                "v": "599$a",
                                "l": "599$a"
                            }
                        },
                        {
                            "v": {
                                "v": "776$i",
                                "l": "776$i"
                            }
                        },
                        {
                            "v": {
                                "v": "856$u",
                                "l": "856$u"
                            }
                        },
                        {
                            "v": {
                                "v": "245$n",
                                "l": "245$n"
                            }
                        },
                        {
                            "v": {
                                "v": "245$b",
                                "l": "245$b"
                            }
                        },
                        {
                            "v": {
                                "v": "245$a",
                                "l": "245$a"
                            }
                        },
                        {
                            "v": {
                                "v": "035$a",
                                "l": "035$a"
                            }
                        },
                        {
                            "v": {
                                "v": "020$z",
                                "l": "020$z"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "record-based"
        }
    }
    {
        "op": "core/blank-down",
        "description": "Blank down cells in column ``BIB Number``",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "BIB Number"
    },
    {
        "op": "core/text-transform",
        "description": "Remove ISBD punctuation from end of 245$a and 245$b values",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "No Field Number",
                    "expression": "value",
                    "columnName": "No Field Number",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": "245$b",
                                "l": "245$b"
                            }
                        },
                        {
                            "v": {
                                "v": "245$a",
                                "l": "245$a"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "columnName": "Values",
        "expression": "grel:if(match(value,/.*\\s(.)/)[0]==\"/\",match(value,/(.*)\\s\\//)[0],if(match(value,/.*\\s(.)/)[0]==\":\",match(value,/(.*)\\s:/)[0],if(match(value,/.*\\s(.)/)[0]==\";\",match(value,/(.*)\\s;/)[0],if(match(value,/.*\\s(.)/)[0]==\".\",match(value,/(.*)\\s\\./)[0],if(match(value,/.*\\s(.)/)[0]==\"=\",match(value,/(.*)\\s=/)[0],trim(value))))))",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/text-transform",
        "description": "Revert all URL escape characters to their actual values in ``Values``",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "No Field Number",
                    "expression": "value",
                    "columnName": "No Field Number",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": "856$u",
                                "l": "856$u"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "columnName": "Values",
        "expression": "grel:unescape(value,\"url\")",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/text-transform",
        "description": "Combine values of ``Fields`` and ``Values`` with `]|[` between",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "Values",
        "expression": "grel:cells.Fields.value+\"]|[\"+value",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    },
    {
        "op": "core/column-removal",
        "description": "Remove column ``Fields``",
        "columnName": "Fields"
    },
    {
        "op": "core/column-addition",
        "description": "Create column ``Pivot`` with BIB number and record row number",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "baseColumnName": "BIB Number",
        "expression": "grel:row.record.cells[\"BIB Number\"].value[0]+\"-\"+toString(row.index-row.record.fromRowIndex+1)",
        "onError": "set-to-blank",
        "newColumnName": "Pivot",
        "columnInsertIndex": 1
    },
    {
        "op": "core/key-value-columnize",
        "description": "Pivot table to create column with names of values in ``No Field Number`` containing values from ``Values``",
        "keyColumnName": "No Field Number",
        "valueColumnName": "Values",
        "noteColumnName": ""
    }
    {
        "op": "core/column-reorder",
        "description": "Put columns in order of use",
        "columnNames": [
            "BIB Number",
            "Pivot",
            "245$a",
            "245$b",
            "245$n",
            "250$a",
            "856$u",
            "035$a",
            "599$a",
            "020$a",
            "020$z",
            "020$q",
            "776$z",
            "776$i"
        ]
    }
    {
        "op": "core/text-transform",
        "description": "Remove MARC code from values in ``245$a``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "245$a",
        "expression": "grel:trim(substring(value,indexOf(value,\"]|[\")+3))",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    },
    {
        "op": "core/text-transform",
        "description": "Remove MARC code from values in ``245$b``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "245$b",
        "expression": "grel:trim(substring(value,indexOf(value,\"]|[\")+3))",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    },
    {
        "op": "core/text-transform",
        "description": "Remove MARC code from values in ``245$n``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "245$n",
        "expression": "grel:trim(substring(value,indexOf(value,\"]|[\")+3))",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    },
    {
        "op": "core/text-transform",
        "description": "Remove MARC code from values in ``250$a``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "250$a",
        "expression": "grel:trim(substring(value,indexOf(value,\"]|[\")+3))",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/column-addition",
        "description": "Create column ``Title`` combining the 245$a, the 245$b after a colon if present, and the 245$n and 250$a with labels in seperate parentheticals if present",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "baseColumnName": "245$a",
        "expression": "grel:if(isError(row.record.cells[\"245$b\"].value[0]),if(isError(row.record.cells[\"245$n\"].value[0]),if(isError(row.record.cells[\"250$a\"].value[0]),row.record.cells[\"245$a\"].value[0],row.record.cells[\"245$a\"].value[0]+\" (ed=\"+row.record.cells[\"250$a\"].value[0]+\")\"),if(isError(row.record.cells[\"250$a\"].value[0]),row.record.cells[\"245$a\"].value[0]+\" (vol=\"+row.record.cells[\"245$n\"].value[0]+\")\",row.record.cells[\"245$a\"].value[0]+\" (vol=\"+row.record.cells[\"245$n\"].value[0]+\")\"+\" (ed=\"+row.record.cells[\"250$a\"].value[0]+\")\")),if(isError(row.record.cells[\"245$n\"].value[0]),if(isError(row.record.cells[\"250$a\"].value[0]),row.record.cells[\"245$a\"].value[0]+\": \"+row.record.cells[\"245$b\"].value[0],row.record.cells[\"245$a\"].value[0]+\": \"+row.record.cells[\"245$b\"].value[0]+\" (ed=\"+row.record.cells[\"250$a\"].value[0]+\")\"),if(isError(row.record.cells[\"250$a\"].value[0]),row.record.cells[\"245$a\"].value[0]+\": \"+row.record.cells[\"245$b\"].value[0]+\" (vol=\"+row.record.cells[\"245$n\"].value[0]+\")\",row.record.cells[\"245$a\"].value[0]+\": \"+row.record.cells[\"245$b\"].value[0]+\" (vol=\"+row.record.cells[\"245$n\"].value[0]+\")\"+\" (ed=\"+row.record.cells[\"250$a\"].value[0]+\")\")))",
        "onError": "set-to-blank",
        "newColumnName": "Title",
        "columnInsertIndex": 1
    }
    {
        "op": "core/blank-down",
        "description": "Blank down cells in column ``Title``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "Title"
    }
    {
        "op": "core/column-removal",
        "description": "Remove column ``245$a``",
        "columnName": "245$a"
    },
    {
        "op": "core/column-removal",
        "description": "Remove column ``245$b``",
        "columnName": "245$b"
    },
    {
        "op": "core/column-removal",
        "description": "Remove column ``245$n``",
        "columnName": "245$n"
    }
    {
        "op": "core/column-removal",
        "description": "Remove column ``250$a``",
        "columnName": "250$a"
    }
    {
        "op": "core/transpose-columns-into-rows",
        "description": "Pivot all MARC tag column names into column ``Fields`` and the corresponding values into column ``Values``",
        "startColumnName": "856$u",
        "columnCount": -1,
        "ignoreBlankCells": true,
        "fillDown": false,
        "separator": null,
        "keyColumnName": "Fields",
        "valueColumnName": "Values"
    },
    {
        "op": "core/fill-down",
        "description": "Fill down cells in column ``BIB Number``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "BIB Number"
    },
    {
        "op": "core/column-removal",
        "description": "Remove column ``Pivot``",
        "columnName": "Pivot"
    },
    {
        "op": "core/row-removal",
        "description": "Remove rows with no values",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "Values",
                    "expression": "isBlank(value)",
                    "columnName": "Values",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": true,
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "record-based"
        }
    }
    {
        "op": "core/blank-down",
        "description": "Blank down cells in column ``BIB Number``",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "BIB Number"
    },
    {
        "op": "core/column-addition",
        "description": "Create empty column ``Temp``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "baseColumnName": "BIB Number",
        "expression": "grel:null",
        "onError": "set-to-blank",
        "newColumnName": "Temp",
        "columnInsertIndex": 2
    },
    {
        "op": "core/text-transform",
        "description": "Copy Ebook Central URLs from ``Values`` into ``Temp``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "Temp",
        "expression": "grel:find(cells.Values.value,/https?:\\/\\/ebookcentral\\.proquest\\.com\\/lib\\/[\\w-]*\\/detail\\.action\\?docID=\\d+/)[0]",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    },
    {
        "op": "core/text-transform",
        "description": "Copy MyiLibrary URLs from ``Values`` into ``Temp``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "Temp",
        "expression": "grel:find(cells.Values.value,/https?:\\/\\/(lib|www)\\.myilibrary\\.com\\/?(detail\\.asp)?\\?(id|ID)=\\d+/)[0]",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/text-transform",
        "description": "Copy Ebrary URLs with `=` from ``Values`` into ``Temp``",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Temp",
        "expression": "grel:find(cells.Values.value,/https?:\\/\\/site\\.ebrary\\.com\\/.*(id|ID)=\\d+/)[0]",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/text-transform",
        "description": "Copy Ebrary URLs without `=` from ``Values`` to ``Temp``",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Temp",
        "expression": "grel:find(cells.Values.value,/https?:\\/\\/site\\.ebrary\\.com\\/id\\/\\d+/)[0]",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/text-transform",
        "description": "Copy Ebook Library URLs from ``Values`` into ``Temp``",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Temp",
        "expression": "grel:find(cells.Values.value,/https?:\\/\\/(www.)?\\w*\\.eblib\\.com\\/[\\w\\/.?=&]*=\\w+/)[0]",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/text-transform",
        "description": "For records with no value in ``Temp``, copy DOI URLs from ``Values`` to ``Temp``",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "Temp",
                    "expression": "isBlank(value)",
                    "columnName": "Temp",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": true,
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "columnName": "Temp",
        "expression": "grel:find(cells.Values.value,/https?:\\/\\/(dx\\.)?doi\\.org\\/[\\w\\-\\.\\/]+/)[0]",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/column-addition",
        "description": "Create column ``URL Domain`` with the domain of the URL in ``Temp``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "baseColumnName": "Temp",
        "expression": "grel:substring(substring(find(cells.Temp.value,/\\/\\/.*\\//)[0],2),0,indexOf(substring(find(cells.Temp.value,/\\/\\/.*\\//)[0],2),\"/\"))",
        "onError": "set-to-blank",
        "newColumnName": "URL Domain",
        "columnInsertIndex": 2
    },
    {
        "op": "core/text-transform",
        "description": "Add domains ending with characters other than `/` to ``URL Domain``",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "URL Domain",
                    "expression": "isBlank(value)",
                    "columnName": "URL Domain",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": true,
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                },
                {
                    "type": "list",
                    "name": "Temp",
                    "expression": "isBlank(value)",
                    "columnName": "Temp",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": false,
                                "l": "false"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "columnName": "URL Domain",
        "expression": "grel:substring(find(cells.Temp.value,/\\/\\/[\\w\\.\\-]*/)[0],2,length(find(cells.Temp.value,/\\/\\/[\\w\\.\\-]*/)[0]))",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/column-addition",
        "description": "Create column ``URL ID`` with DOIs extracted from platform URLs for records with no values in ``Temp``",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "Temp",
                    "expression": "isBlank(value)",
                    "columnName": "Temp",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": true,
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "baseColumnName": "Values",
        "expression": "grel:find(value,/10\\.[\\w\\.]+\\/[\\w\\.\\-]+$/)[0]",
        "onError": "set-to-blank",
        "newColumnName": "URL ID",
        "columnInsertIndex": 3
    }
    {
        "op": "core/text-transform",
        "description": "For rows with DOIs extracted from platform URLs in ``URL ID``, make value of ``URL Domain`` `DOI`",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "URL ID",
                    "expression": "isBlank(value)",
                    "columnName": "URL ID",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": false,
                                "l": "false"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "columnName": "URL Domain",
        "expression": "grel:\"DOI\"",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/column-addition",
        "description": "Create column ``Equals`` with the number of equals signs in the URL in ``Temp``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "baseColumnName": "Temp",
        "expression": "grel:if(isNull(value),null,if(contains(value,\"=\"),if(indexOf(value,\"=\")==lastIndexOf(value,\"=\"),\"Single\",\"Multiple\"),\"None\"))",
        "onError": "set-to-blank",
        "newColumnName": "Equals",
        "columnInsertIndex": 3
    }
    {
        "op": "core/text-transform",
        "description": "Add `None Relevant` to ``URL Domain`` for all the records that still don't have a URL",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "URL Domain",
                    "expression": "isBlank(value)",
                    "columnName": "URL Domain",
                    "invert": true,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": false,
                                "l": "false"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "record-based"
        },
        "columnName": "URL Domain",
        "expression": "grel:\"None Relevant\"",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    },
    {
        "op": "core/blank-down",
        "description": "Blank down `None Relevant` values in column ``URL Domain``",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "URL Domain",
                    "expression": "value",
                    "columnName": "URL Domain",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": "None Relevant",
                                "l": "None Relevant"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "record-based"
        },
        "columnName": "URL Domain"
    },
    {
        "op": "core/column-split",
        "description": "For 035 and 599 field rows, split column ``Values`` at MARC tag delimeter `]|[`",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "Fields",
                    "expression": "value",
                    "columnName": "Fields",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": "035$a",
                                "l": "035$a"
                            }
                        },
                        {
                            "v": {
                                "v": "599$a",
                                "l": "599$a"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "columnName": "Values",
        "guessCellType": false,
        "removeOriginalColumn": false,
        "mode": "separator",
        "separator": "]|[",
        "regex": false,
        "maxColumns": 0
    },
    {
        "op": "core/column-removal",
        "description": "Remove column ``Values 1``",
        "columnName": "Values 1"
    },
    {
        "op": "core/column-split",
        "description": "Split column ``Values`` at opening parentheses",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "Fields",
                    "expression": "value",
                    "columnName": "Fields",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": "035$a",
                                "l": "035$a"
                            }
                        },
                        {
                            "v": {
                                "v": "599$a",
                                "l": "599$a"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "columnName": "Values 2",
        "guessCellType": false,
        "removeOriginalColumn": true,
        "mode": "separator",
        "separator": "(",
        "regex": false,
        "maxColumns": 0
    }
    {
        "op": "core/column-addition",
        "description": "Create column ``001 ID Source`` with contents of parenthetical at end of 035 or 599 field",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "Fields",
                    "expression": "value",
                    "columnName": "Fields",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": "035$a",
                                "l": "035$a"
                            }
                        },
                        {
                            "v": {
                                "v": "599$a",
                                "l": "599$a"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                },
                {
                    "type": "list",
                    "name": "Values 2 1",
                    "expression": "isBlank(value)",
                    "columnName": "Values 2 1",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": false,
                                "l": "false"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                },
                {
                    "type": "list",
                    "name": "Values 2 2",
                    "expression": "isBlank(value)",
                    "columnName": "Values 2 2",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": false,
                                "l": "false"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "baseColumnName": "Values 2 2",
        "expression": "grel:if(endsWith(value,\")\"),substring(value,0,-1),value)",
        "onError": "set-to-blank",
        "newColumnName": "001 ID Source",
        "columnInsertIndex": 6
    }
    {
        "op": "core/column-addition",
        "description": "Create column ``Unofficial 001 ID Source`` containing the letters at the beginning of 035$a or 599$a values that didn't have parentheticals",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "Values 2 1",
                    "expression": "isBlank(value)",
                    "columnName": "Values 2 1",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": false,
                                "l": "false"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "baseColumnName": "Values 2 1",
        "expression": "grel:if(and(length(splitByCharType(toUppercase(value)))==2,isNotNull(match(splitByCharType(toUppercase(value))[1],/(\\d|\\-)*/))),splitByCharType(toUppercase(value))[0],null)",
        "onError": "set-to-blank",
        "newColumnName": "Unofficial 001 ID Source",
        "columnInsertIndex": 7
    },
    {
        "op": "core/column-addition",
        "description": "Create column ``001 ID`` with numerical values from 035$a and 599$a values that didn't have parentheticals",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "Values 2 1",
                    "expression": "isBlank(value)",
                    "columnName": "Values 2 1",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": false,
                                "l": "false"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "baseColumnName": "Values 2 1",
        "expression": "grel:if(and(length(splitByCharType(toUppercase(value)))==2,isNotNull(match(splitByCharType(toUppercase(value))[1],/(\\d|\\-)*/))),splitByCharType(toUppercase(value))[1],if(and(length(splitByCharType(toUppercase(value)))==1,isNotNull(match(splitByCharType(toUppercase(value))[0],/(\\d|\\-)*/))),value,null))",
        "onError": "set-to-blank",
        "newColumnName": "001 ID",
        "columnInsertIndex": 8
    }
    {
        "op": "core/column-split",
        "description": "Split column ``Values 2 2`` at closing parentheses",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Values 2 2",
        "guessCellType": false,
        "removeOriginalColumn": true,
        "mode": "separator",
        "separator": ")",
        "regex": false,
        "maxColumns": 0
    },
    {
        "op": "core/text-transform",
        "description": "Add contents of parentheticals to ``001 ID Source``",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "001 ID Source",
        "expression": "grel:if(isNotNull(cells[\"Values 2 2 1\"].value),cells[\"Values 2 2 1\"].value,value)",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    },
    {
        "op": "core/text-transform",
        "description": "Add the letters at the beginning of 035$a or 599$a to column ``Unofficial 001 ID Source``",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Unofficial 001 ID Source",
        "expression": "grel:if(isNull(value),if(and(length(splitByCharType(toUppercase(cells[\"Values 2 2 2\"].value)))==2,isNotNull(match(splitByCharType(toUppercase(cells[\"Values 2 2 2\"].value))[1],/(\\d|\\-)*/))),splitByCharType(toUppercase(cells[\"Values 2 2 2\"].value))[0],null),value)",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    },
    {
        "op": "core/text-transform",
        "description": "Add numerical parts of 035$a and 599$a to ``001 ID``",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "001 ID",
        "expression": "grel:if(isNull(value),if(and(length(splitByCharType(toUppercase(cells[\"Values 2 2 2\"].value)))==2,isNotNull(match(splitByCharType(toUppercase(cells[\"Values 2 2 2\"].value))[1],/(\\d|\\-)*/))),splitByCharType(toUppercase(cells[\"Values 2 2 2\"].value))[1],if(and(length(splitByCharType(toUppercase(cells[\"Values 2 2 2\"].value)))==1,isNotNull(match(splitByCharType(toUppercase(cells[\"Values 2 2 2\"].value))[0],/(\\d|\\-)*/))),splitByCharType(toUppercase(cells[\"Values 2 2 2\"].value))[0],null)),value)",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/column-removal",
        "description": "Remove column ``Values 2 1``",
        "columnName": "Values 2 1"
    },
    {
        "op": "core/column-removal",
        "description": "Remove column ``Values 2 2 1``",
        "columnName": "Values 2 2 1"
    },
    {
        "op": "core/column-removal",
        "description": "Remove column ``Values 2 2 2``",
        "columnName": "Values 2 2 2"
    }
    {
        "op": "core/text-transform",
        "description": "For rows with null value in ``001 ID Source`` and a unique value in ``Unofficial 001 ID Source``, append value of ``Unofficial 001 ID Source`` to values in column ``001 ID``",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "Unofficial 001 ID Source",
                    "expression": "facetCount(value, 'value', 'Unofficial 001 ID Source') > 1",
                    "columnName": "Unofficial 001 ID Source",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": false,
                                "l": "false"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                },
                {
                    "type": "list",
                    "name": "001 ID Source",
                    "expression": "isBlank(value)",
                    "columnName": "001 ID Source",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": false,
                                "l": "false"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "columnName": "001 ID",
        "expression": "grel:cells[\"Unofficial 001 ID Source\"].value+value",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    },
    {
        "op": "core/text-transform",
        "description": "For rows with null value in ``001 ID Source`` and a unique value in ``Unofficial 001 ID Source``, null value of ``Unofficial 001 ID Source``",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "Unofficial 001 ID Source",
                    "expression": "facetCount(value, 'value', 'Unofficial 001 ID Source') > 1",
                    "columnName": "Unofficial 001 ID Source",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": false,
                                "l": "false"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                },
                {
                    "type": "list",
                    "name": "001 ID Source",
                    "expression": "isBlank(value)",
                    "columnName": "001 ID Source",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": false,
                                "l": "false"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "columnName": "Unofficial 001 ID Source",
        "expression": "null",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
]