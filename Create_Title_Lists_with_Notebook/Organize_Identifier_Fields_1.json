[
    {
        "op": "core/transpose-columns-into-rows",
        "combinedColumnName": "All 035$a",
        "startColumnName": "035$a",
        "columnCount": -1,
        "ignoreBlankCells": true,
        "fillDown": false,
        "prependColumnName": false,
        "separator": ":",
        "keyColumnName": null,
        "valueColumnName": null,
        "description": "Transpose cells in columns starting with 035$a into rows in one new column named All 035$a"
    },
    {
        "op": "core/column-split",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "All 035$a",
        "guessCellType": false,
        "removeOriginalColumn": true,
        "mode": "separator",
        "separator": ")",
        "regex": false,
        "maxColumns": 2,
        "description": "Split column ``All 035$a`` at closing parentheses"
    },
    {
        "op": "core/column-rename",
        "oldColumnName": "All 035$a 1",
        "newColumnName": "Fields",
        "description": "Rename column ``All 035$a 1`` to ``Fields``"
    },
    {
        "op": "core/column-rename",
        "oldColumnName": "All 035$a 2",
        "newColumnName": "Values",
        "description": "Rename column ``All 035$a 2`` to ``Values``"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "Values",
                    "expression": "isBlank(value)",
                    "columnName": "Values",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": false,
                                "l": "false"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "columnName": "Fields",
        "expression": "grel:value.substring(1)",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "For rows split at closing parentheses, remove first character from cells in column ``Fields``"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "Fields",
                    "expression": "grel:length(splitByCharType(value))",
                    "columnName": "Fields",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": 2,
                                "l": "2"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                },
                {
                    "type": "list",
                    "name": "Values",
                    "expression": "isBlank(value)",
                    "columnName": "Values",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": true,
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "columnName": "Values",
        "expression": "grel:\"*\"+splitByCharType(cells[\"Fields\"].value)[1]",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "For 035$a values not split at parentheses that can be split by Unicode character types, add the second part of the value to ``Values`` with an asterisk in front"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "Fields",
                    "expression": "grel:length(splitByCharType(value))",
                    "columnName": "Fields",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": 2,
                                "l": "2"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                },
                {
                    "type": "list",
                    "name": "Values",
                    "expression": "grel:value.startsWith(\"*\")",
                    "columnName": "Values",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": true,
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "columnName": "Fields",
        "expression": "grel:splitByCharType(value)[0]+\"*\"",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "For the 035$a values split above, replace the second part from ``Fields`` with an asterisk"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Values",
        "expression": "grel:if(startsWith(value,\"*\"),substring(value,1),value)",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "Remove asterisks at the beginning of ``Values`` values"
    },
    {
        "op": "core/column-addition",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "baseColumnName": "Values",
        "expression": "grel:if(and(startsWith(value,\"ybp\"),length(splitByCharType(value))==2),splitByCharType(value)[1],value)",
        "onError": "set-to-blank",
        "newColumnName": "Dedupe",
        "columnInsertIndex": 1,
        "description": "Create column ``Dedupe`` with value of ``Values`` or its numeric part if it has two parts when split by Unicode character type and begins with `ybp` "
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "Dedupe",
                    "expression": "facetCount(value, 'value', 'Dedupe') > 1",
                    "columnName": "Dedupe",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": true,
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "columnName": "Dedupe",
        "expression": "grel:\"*\"+value",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "Add asterisks in front of duplicate values in column ``Dedupe``"
    },
    {
        "op": "core/column-addition",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "baseColumnName": "Fields",
        "expression": "grel:if(endsWith(value,\"*\"),row.record.cells[\"SYS Number\"].value[0]+\"-\"+value.substring(0,-1).toUppercase()+\"-\"+toString(row.index-row.record.fromRowIndex+1),row.record.cells[\"SYS Number\"].value[0]+\"-\"+value.toUppercase()+\"-\"+toString(row.index-row.record.fromRowIndex+1))",
        "onError": "set-to-blank",
        "newColumnName": "Sort 035 Fields",
        "columnInsertIndex": 1,
        "description": "Create column ``Sort 035 Fields`` with the SYS number, the 035$a source without any asterisks, and the number of the row in the record separated by hyphens"
    },
    {
        "op": "core/fill-down",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "SYS Number",
        "description": "Fill down cells in column ``SYS Number``"
    },
    {
        "op": "core/column-addition",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "baseColumnName": "SYS Number",
        "expression": "grel:row.record.index",
        "onError": "set-to-blank",
        "newColumnName": "Reorder",
        "columnInsertIndex": 1,
        "description": "Create column ``Reorder`` with number of row in project"
    },
    {
        "op": "core/row-reorder",
        "mode": "row-based",
        "sorting": {
            "criteria": [
                {
                    "valueType": "string",
                    "column": "Sort 035 Fields",
                    "blankPosition": 2,
                    "errorPosition": 1,
                    "reverse": false,
                    "caseSensitive": false
                }
            ]
        },
        "description": "Reorder rows based on ``Sort 035 fields``"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Sort 035 Fields",
        "expression": "grel:substring(value,0,lastIndexOf(value,\"-\"))",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "Remove row number in record from ``Sort 035 Fields``"
    },
    {
        "op": "core/column-move",
        "columnName": "Sort 035 Fields",
        "index": 0,
        "description": "Move column ``Sort 035 Fields`` to beginning"
    },
    {
        "op": "core/blank-down",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Sort 035 Fields",
        "description": "Blank down cells in column ``Sort 035 Fields``"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "Sort 035 Fields",
                    "expression": "isBlank(value)",
                    "columnName": "Sort 035 Fields",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": true,
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "record-based"
        },
        "columnName": "Fields",
        "expression": "grel:if(length(row.record.cells[\"Dedupe\"].value)-(length(row.record.cells[\"Dedupe\"].value.join(\"\"))-length(row.record.cells[\"Dedupe\"].value.join(\"\").replace(\"*\",\"\")))==1,if(startsWith(cells.Dedupe.value,\"*\"),null,value),value+\" #\"+toString(row.index-row.record.fromRowIndex+1))",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "For those groups of 035$a fields with the same source in a single record, if just one of the values is unique, null the values in ``Fields`` for all the other rows; otherwise, add the number of the row in the record to the value in ``Fields``"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "Dedupe",
                    "expression": "grel:value.startsWith(\"*\")",
                    "columnName": "Dedupe",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": true,
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                },
                {
                    "type": "list",
                    "name": "Sort 035 Fields",
                    "expression": "isBlank(value)",
                    "columnName": "Sort 035 Fields",
                    "invert": true,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": true,
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "record-based"
        },
        "columnName": "Dedupe",
        "expression": "grel:replace(value,\"*\",\"^\")",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "For duplicate 035$a values from a field with an unique source for its record, replace the asterisk with a carat"
    },
    {
        "op": "core/column-removal",
        "columnName": "Sort 035 Fields",
        "description": "Remove column ``Sort 035 Fields``"
    },
    {
        "op": "core/row-reorder",
        "mode": "record-based",
        "sorting": {
            "criteria": [
                {
                    "valueType": "number",
                    "column": "Reorder",
                    "blankPosition": 2,
                    "errorPosition": 1,
                    "reverse": false
                }
            ]
        },
        "description": "Reorder rows based on ``Reorder``"
    },
    {
        "op": "core/blank-down",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "SYS Number",
        "description": "Blank down cells in column ``SYS Number``"
    },
    {
        "op": "core/column-removal",
        "columnName": "Reorder",
        "description": "Remove column ``Reorder``"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "Dedupe",
                    "expression": "grel:value.startsWith(\"*\")",
                    "columnName": "Dedupe",
                    "invert": true,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": true,
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": true
                },
                {
                    "type": "list",
                    "name": "Dedupe",
                    "expression": "grel:startsWith(value,\"^\")",
                    "columnName": "Dedupe",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": true,
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "record-based"
        },
        "columnName": "Fields",
        "expression": "grel:if(and(startsWith(cells.Dedupe.value,\"^\"),endsWith(value,\"*\")),null,value)",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "For the records where no values in ``Dedupe`` start with asterisks but some do start with carats, null the value in column ``Fields`` for the row where it ends with an asterisk (was created through character splitting) and ``Dedupe`` has a carat"
    },
    {
        "op": "core/column-removal",
        "columnName": "Dedupe",
        "description": "Remove column ``Dedupe``"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "Values",
                    "expression": "isBlank(value)",
                    "columnName": "Values",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": true,
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "columnName": "Fields",
        "expression": "grel:\"no label|\"+value",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "For 035$a values with no label, add `no label|` in front of them in ``Fields``"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "Values",
                    "expression": "isBlank(value)",
                    "columnName": "Values",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": true,
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "row-based"
        },
        "columnName": "Values",
        "expression": "grel:cells[\"Fields\"].value.partition(\"|\")[2]",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "Add the 035$a values without labels to ``Values``"
    },
    {
        "op": "core/text-transform",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Fields",
        "expression": "grel:if(contains(value,\"|\"),value.partition(\"|\")[0],value)",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10,
        "description": "Remove the pipe and value from the 035$a values without labels in ``Fields``"
    }
]