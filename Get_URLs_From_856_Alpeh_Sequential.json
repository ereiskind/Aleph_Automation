[
    {
        "description": "Load Alpeh Sequential text file with column widths 10,6,2",
        "op": "core/column-removal",
        "description": "Remove column ``Column 3``",
        "columnName": "Column 3"
    },
    {
        "op": "core/column-rename",
        "description": "Rename column ``Column 1`` to ``SYS Number``",
        "oldColumnName": "Column 1",
        "newColumnName": "SYS Number"
    },
    {
        "op": "core/text-transform",
        "description": "Trim whitespace from cells in column ``SYS Number``",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "SYS Number",
        "expression": "value.trim()",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    },
    {
        "op": "core/text-transform",
        "description": "Remove indicators and extra spaces from cells in column ``Column 2``",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Column 2",
        "expression": "grel:substring(value,0,3)",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    },
    {
        "op": "core/column-rename",
        "description": "Rename column ``Column 2`` to ``Fields``",
        "oldColumnName": "Column 2",
        "newColumnName": "Fields"
    }
    {
        "op": "core/column-rename",
        "description": "Rename column ``Column 4`` to ``Values``",
        "oldColumnName": "Column 4",
        "newColumnName": "Values"        
    },
    {
        "op": "core/column-addition",
        "description": "Create column ``Numbering`` combining the values of ``SYS Number`` and ``Fields``",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "baseColumnName": "SYS Number",
        "expression": "grel:value+\"-\"+cells.Fields.value",
        "onError": "set-to-blank",
        "newColumnName": "Numbering",
        "columnInsertIndex": 0
    }
    {
        "op": "core/column-addition",
        "description": "Create column ``Keep Number`` with the number of times the value in ``Numbering`` appears",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "newColumnName": "Keep Number",
        "columnInsertIndex": 1,
        "baseColumnName": "Numbering",
        "expression": "grel:facetCount(value,\"value\",\"Numbering\")",
        "onError": "set-to-blank"
    },
    {
        "op": "core/blank-down",
        "description": "Blank down cells in column ``Numbering``",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Numbering"
    },
    {
        "op": "core/column-addition",
        "description": "Create column ``Number`` with the row number for the value in ``Numbering``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "newColumnName": "Number",
        "columnInsertIndex": 1,
        "baseColumnName": "Numbering",
        "expression": "grel:toString(row.index-row.record.fromRowIndex+1)",
        "onError": "set-to-blank"
    },
    {
        "op": "core/text-transform",
        "description": "Turn values in ``Keep Number`` to text",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "Keep Number",
        "expression": "value.toString()",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    },
    {
        "op": "core/text-transform",
        "description": "For fields repeated in a record, add row number to value of ``Fields``",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "Keep Number",
                    "expression": "value",
                    "columnName": "Keep Number",
                    "invert": true,
                    "selection": [
                        {
                            "v": {
                                "v": "1",
                                "l": "1"
                            }
                        }
                    ],
                    "selectNumber": false,
                    "selectDateTime": false,
                    "selectBoolean": false,
                    "omitBlank": false,
                    "selectBlank": false,
                    "omitError": false,
                    "selectError": false
                }
            ],
            "mode": "record-based"
        },
        "columnName": "Fields",
        "expression": "grel:\"Field #\"+cells[\"Number\"].value+\" \"+value",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    },
    {
        "op": "core/column-removal",
        "description": "Remove column ``Numbering``",
        "columnName": "Numbering"
    },
    {
        "op": "core/column-removal",
        "description": "Remove column ``Number``",
        "columnName": "Number"
    },
    {
        "op": "core/column-removal",
        "description": "Remove column ``Keep Number``",
        "columnName": "Keep Number"
    },
    {
        "op": "core/blank-down",
        "description": "Blank down cells in column ``SYS Number``",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "SYS Number"
    }
    {
        "description": "Organize MARC subfields",
        "op": "core/column-split",
        "description": "Split subfields in ``Values`` into their own columns",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "Values",
        "guessCellType": true,
        "removeOriginalColumn": true,
        "mode": "separator",
        "separator": "$",
        "regex": false,
        "maxColumns": 0
    },
    {
        "op": "core/transpose-columns-into-rows",
        "description": "Transpose values of columns created by split of ``Values`` into one new column ``Values``",
        "startColumnName": "Values 1",
        "columnCount": -1,
        "ignoreBlankCells": true,
        "fillDown": false,
        "combinedColumnName": "Values",
        "prependColumnName": false,
        "separator": ":"
    }
    {
        "op": "core/fill-down",
        "description": "Fill down cells in column ``Fields``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "Fields"
    }
    {
        "op": "core/fill-down",
        "description": "Fill down cells in column ``SYS Number``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "SYS Number"
    },
    {
        "op": "core/row-removal",
        "description": "Remove rows with null value in ``Values``",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "Values",
                    "expression": "isBlank(value).toString()",
                    "columnName": "Values",
                    "invert": false,
                    "selection": [
                        {
                            "v": {
                                "v": "true",
                                "l": "true"
                            }
                        }
                    ],
                    "selectNumber": false,
                    "selectDateTime": false,
                    "selectBoolean": false,
                    "omitBlank": false,
                    "selectBlank": false,
                    "omitError": false,
                    "selectError": false
                }
            ],
            "mode": "record-based"
        }
    },
    {
        "op": "core/column-addition",
        "description": "Create column ``Removals`` combing the values of ``SYS Number`` and ``Fields``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "baseColumnName": "SYS Number",
        "expression": "grel:value+\"-\"+cells.Fields.value",
        "onError": "set-to-blank",
        "newColumnName": "Removals",
        "columnInsertIndex": 0
    },
    {
        "op": "core/blank-down",
        "description": "Blank down cells in column ``Removals``",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Removals"
    }
    {
        "op": "core/row-removal",
        "description": "Remove 856 fields for LC catalog enhancement links",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "Values",
                    "expression": "grel:isError(find(value,/uhttp.*loc\\.gov\\/catdir.*/)[0])",
                    "columnName": "Values",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": false,
                                "l": "false"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "record-based"
        }
    }
    {
        "op": "core/row-removal",
        "description": "Remove 856 fields with no 856$u subfield",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "Values",
                    "expression": "grel:toString(startsWith(value,\"u\"))",
                    "columnName": "Values",
                    "invert": true,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": "true",
                                "l": "true"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "record-based"
        }
    }
    {
        "op": "core/column-removal",
        "description": "Remove column ``Removals``",
        "columnName": "Removals"
    },
    {
        "op": "core/blank-down",
        "description": "Blank down cells in column ``SYS Number``",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "SYS Number"
    },
    {
        "op": "core/text-transform",
        "description": "Add subfield delimiter and code to value in ``Fields``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "Fields",
        "expression": "grel:value+\"$\"+substring(cells[\"Values\"].value[0],0,1)",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    },
    {
        "op": "core/text-transform",
        "description": "Remove subfield code from ``Values``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "Values",
        "expression": "grel:substring(value,1)",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/column-addition",
        "description": "Create column ``No Field Number`` with the field and subfield code for the row’s value",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "newColumnName": "No Field Number",
        "columnInsertIndex": 2,
        "baseColumnName": "Fields",
        "expression": "grel:substring(value,-5)",
        "onError": "set-to-blank"
    }
    {
        "op": "core/fill-down",
        "description": "Fill down cells in column ``SYS Number``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "SYS Number"
    },
    {
        "op": "core/row-removal",
        "description": "Remove rows for all subfields but 856$u",
        "engineConfig": {
            "facets": [
                {
                    "type": "list",
                    "name": "No Field Number",
                    "expression": "value",
                    "columnName": "No Field Number",
                    "invert": true,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [
                        {
                            "v": {
                                "v": "856$u",
                                "l": "856$u"
                            }
                        }
                    ],
                    "selectBlank": false,
                    "selectError": false
                }
            ],
            "mode": "record-based"
        }
    },
    {
        "op": "core/column-removal",
        "description": "Remove column ``No Field Number``",
        "columnName": "No Field Number"
    },
    {
        "op": "core/blank-down",
        "description": "Blank down cells in column ``SYS Number``",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "SYS Number"
    },
    {
        "op": "core/text-transform",
        "description": "Revert all URL escape characters to their actual values in ``Values``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "Values",
        "expression": "grel:unescape(value,\"url\")",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/column-addition",
        "description": "Create empty column ``Temp``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "baseColumnName": "SYS Number",
        "expression": "grel:null",
        "onError": "set-to-blank",
        "newColumnName": "Temp",
        "columnInsertIndex": 2
    },
    {
        "op": "core/text-transform",
        "description": "Copy Ebook Central URLs from ``Values`` into ``Temp``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "Temp",
        "expression": "grel:find(cells.Values.value,/https?:\\/\\/ebookcentral\\.proquest\\.com\\/lib\\/[\\w-]*\\/detail\\.action\\?docID=\\d+/)[0]",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    },
    {
        "op": "core/text-transform",
        "description": "Copy MyiLibrary URLs from ``Values`` into ``Temp``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "Temp",
        "expression": "grel:find(cells.Values.value,/https?:\\/\\/(lib|www)\\.myilibrary\\.com\\/?(detail\\.asp)?\\?(id|ID)=\\d+/)[0]",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/text-transform",
        "description": "Copy Ebrary URLs with `=` from ``Values`` into ``Temp``",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Temp",
        "expression": "grel:find(cells.Values.value,/https?:\\/\\/site\\.ebrary\\.com\\/.*(id|ID)=\\d+/)[0]",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/text-transform",
        "description": "Copy Ebrary URLs without `=` from ``Values`` to ``Temp``",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Temp",
        "expression": "grel:find(cells.Values.value,/https?:\\/\\/site\\.ebrary\\.com\\/id\\/\\d+/)[0]",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/text-transform",
        "description": "Copy Ebook Library URLs from ``Values`` into ``Temp``",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Temp",
        "expression": "grel:find(cells.Values.value,/https?:\\/\\/(www.)?\\w*\\.eblib\\.com\\/[\\w\\/.?=&]*=\\w+/)[0]",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
          "op": "core/text-transform",
          "description": "Copy EBSCOhost URLs from ``Values`` into ``Temp``",
          "engineConfig": {
            "facets": [],
            "mode": "row-based"
          },
          "columnName": "Temp",
          "expression": "grel:find(cells.Values.value,/https?:\\/\\/search\\.ebscohost\\.com\\/login\\.aspx\\?.*AN=\\d+/)[0]",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/text-transform",
        "description": "Copy JSTOR URLs from ``Values`` into ``Temp``",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Temp",
        "expression": "grel:find(cells.Values.value,/https?:\\/\\/(www\\.)?jstor\\.org\\/stable\\/[\\w.\\/]+/)[0]",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/text-transform",
        "description": "Copy OApen URLs with `=` from ``Values`` into ``Temp``",
        "engineConfig": {
            "facets": [],
            "mode": "record-based"
        },
        "columnName": "Temp",
        "expression": "grel:find(cells.Values.value,/https?:\\/\\/(library\\.|www\\.)?oapen\\.org\\/.*=\\d+/)[0]",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    },
    {
        "op": "core/text-transform",
        "description": "Copy OApen URLs without `=` from ``Values`` into ``Temp``",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Temp",
        "expression": "grel:find(cells.Values.value,/https?:\\/\\/(library\\.|www\\.)?oapen\\.org\\/.*\\/\\d+/)[0]",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/text-transform",
        "description": "Copy Project MUSE URLs from ``Values`` into ``Temp``",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Temp",
        "expression": "grel:find(cells.Values.value,/https?:\\/\\/muse\\.jhu\\.edu\\/books?\\/\\d+/)[0]",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/text-transform",
        "description": "Copy ClinicalKey URLs from ``Values`` into ``Temp``",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Temp",
        "expression": "grel:find(cells.Values.value,/https?:\\/\\/www\\.clinicalkey\\.com.*\\/3-s2\\.0-C\\d+/)[0]",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    },
    {
        "op": "core/text-transform",
        "description": "Copy Credo Reference URLs from ``Values`` into ``Temp``",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Temp",
        "expression": "grel:find(cells.Values.value,/https?:\\/\\/search\\.credoreference\\.com\\/content\\/title\\/\\w+/)[0]",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    },
    {
        "op": "core/text-transform",
        "description": "Copy DOI URLs from ``Values`` into ``Temp``",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Temp",
        "expression": "grel:find(cells.Values.value,/https?:\\/\\/(dx\\.)?doi\\.org\\/[\\w-\\.\\/]+/)[0]",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/text-transform",
        "description": "Copy SpringerLink URLs from ``Values`` into ``Temp``",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Temp",
        "expression": "grel:find(cells.Values.value,/https?:\\/\\/link\\.springer\\.com\\/[\\w-\\.\\/]+/)[0]",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    },
    {
        "op": "core/text-transform",
        "description": "Copy SAGE URLs from ``Values`` into ``Temp``",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Temp",
        "expression": "grel:find(cells.Values.value,/https?:\\/\\/\\w*\\.sagepub\\.com\\/\\w+\\/[\\w-]+/)[0]",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }
    {
        "op": "core/text-transform",
        "description": "Copy Science Direct URLs from ``Values`` into ``Temp``",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Temp",
        "expression": "grel:find(cells.Values.value,/https?:\\/\\/www\\.sciencedirect\\.com\\/science\\/book\\/\\d+/)[0]",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    },
    {
        "op": "core/text-transform",
        "description": "Copy Oxford URLs from ``Values`` into ``Temp``",
        "engineConfig": {
            "facets": [],
            "mode": "row-based"
        },
        "columnName": "Temp",
        "expression": "grel:find(cells.Values.value,/https?:\\/\\/www\\.oxford.*\\.com(\\/view)?\\/[\\w\\.\\/\\-:]+/)[0]",
        "onError": "keep-original",
        "repeat": false,
        "repeatCount": 10
    }


Clean temp2
add cleaned to temp
dedupe urls in each record
get domains and propriatary IDs from URLs



        {
          "op": "core/column-addition",
          "engineConfig": {
            "facets": [],
            "mode": "record-based"
          },
          "baseColumnName": "Fields",
          "expression": "grel:null",
          "onError": "set-to-blank",
          "newColumnName": "URL Domain",
          "columnInsertIndex": 2,
          "description": "Create column URL Domain at index 2 based on column Fields using expression grel:null"
        },
        {
          "op": "core/column-addition",
          "engineConfig": {
            "facets": [],
            "mode": "record-based"
          },
          "baseColumnName": "URL Domain",
          "expression": "grel:null",
          "onError": "set-to-blank",
          "newColumnName": "URL ID",
          "columnInsertIndex": 3,
          "description": "Create column URL ID at index 3 based on column URL Domain using expression grel:null"
        },
            {
              "op": "core/column-addition",
              "engineConfig": {
                "facets": [],
                "mode": "record-based"
              },
              "baseColumnName": "Temp",
              "expression": "grel:substring(substring(find(cells.Temp.value,/\\/\\/.*\\//)[0],2),0,indexOf(substring(find(cells.Temp.value,/\\/\\/.*\\//)[0],2),\"/\"))",
              "onError": "set-to-blank",
              "newColumnName": "URL Domain",
              "columnInsertIndex": 3,
              "description": "Create column URL Domain at index 3 based on column Temp using expression grel:substring(substring(find(cells.Temp.value,/\\/\\/.*\\//)[0],2),0,indexOf(substring(find(cells.Temp.value,/\\/\\/.*\\//)[0],2),\"/\"))"
            },
            {
              "op": "core/column-addition",
              "engineConfig": {
                "facets": [
                  {
                    "type": "list",
                    "name": "Equals",
                    "expression": "value",
                    "columnName": "Equals",
                    "invert": false,
                    "omitBlank": false,
                    "omitError": false,
                    "selection": [],
                    "selectBlank": true,
                    "selectError": false
                  }
                ],
                "mode": "record-based"
              },
              "baseColumnName": "Temp",
              "expression": "grel:if(contains(value,\"=\"),if(indexOf(value,\"=\")==lastIndexOf(value,\"=\"),\"Single\",\"Multiple\"),\"None\")",
              "onError": "set-to-blank",
              "newColumnName": "Equals",
              "columnInsertIndex": 3,
              "description": "Create column Equals at index 3 based on column Temp using expression grel:if(contains(value,\"=\"),if(indexOf(value,\"=\")==lastIndexOf(value,\"=\"),\"Single\",\"Multiple\"),\"None\")"
            }